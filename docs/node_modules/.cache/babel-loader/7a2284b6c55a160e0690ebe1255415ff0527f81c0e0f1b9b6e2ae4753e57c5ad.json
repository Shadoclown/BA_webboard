{"ast":null,"code":"// SignUpPage.jsx - Simplified with basic signup method\nimport React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import'../style/SignUpPage.css';import supabase from'./connect';import bcrypt from'bcryptjs';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignUpPage=()=>{const navigate=useNavigate();const[formData,setFormData]=useState({username:'',email:'',password:'',confirmPassword:''});const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const handleInputChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});// Clear error if user is typing\nif(error){setError('');}};const handleSubmit=async()=>{// Basic validation\nif(!formData.username||!formData.email||!formData.password){setError('Please fill all required fields');return;}if(formData.password!==formData.confirmPassword){setError('Passwords do not match');return;}setLoading(true);setError('');try{// Check if username already exists\nconst{data:existingUsers,error:checkUserError}=await supabase.from('user').select('username').eq('username',formData.username).limit(1);if(checkUserError)throw checkUserError;if(existingUsers&&existingUsers.length>0){setError('Username is already taken. Please choose a different username.');setLoading(false);return;}// Check if email already exists\nconst{data:existingEmails,error:checkEmailError}=await supabase.from('user').select('email').eq('email',formData.email).limit(1);if(checkEmailError)throw checkEmailError;if(existingEmails&&existingEmails.length>0){setError('This email is already registered. Please use a different email address or try logging in.');setLoading(false);return;}// Hash password before storing\nconst salt=await bcrypt.genSalt(10);const hashedPassword=await bcrypt.hash(formData.password,salt);// Insert user data into your users table\nconst{error:dbError}=await supabase.from('user').insert([{username:formData.username,email:formData.email,password:hashedPassword}]);if(dbError)throw dbError;// Success!\nsetSuccess('Account created successfully!');// Reset form\nsetFormData({username:'',email:'',password:'',confirmPassword:''});// Redirect to login page after 2 seconds\nsetTimeout(()=>{navigate('/login');},2000);}catch(error){console.error('Signup error:',error);// Provide more specific error messages based on error codes\nif(error.code==='23505'){var _error$details,_error$details2;if((_error$details=error.details)!==null&&_error$details!==void 0&&_error$details.includes('email')){setError('This email is already registered. Please use a different email address.');}else if((_error$details2=error.details)!==null&&_error$details2!==void 0&&_error$details2.includes('username')){setError('This username is already taken. Please choose a different username.');}else{setError('This account already exists. Please try logging in instead.');}}else{setError(error.message||'An error occurred during signup');}}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"signup-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"signup-title\",children:\"Create an account\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"server-error\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-icon\",children:\"\\u26A0\"}),error]}),success&&/*#__PURE__*/_jsxs(\"div\",{className:\"success-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"success-icon\",children:\"\\u2713\"}),success]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:formData.username,onChange:handleInputChange,placeholder:\"Choose a username\",className:\"form-input\",disabled:loading})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleInputChange,placeholder:\"Your email address\",className:\"form-input\",disabled:loading})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,placeholder:\"Create a password\",className:\"form-input\",disabled:loading})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleInputChange,placeholder:\"Confirm your password\",className:\"form-input\",disabled:loading})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"submit-button\",disabled:loading,children:loading?'Creating Account...':'Create Account'}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-text\",children:[\"Already have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",className:\"login-link\",children:\"Login\"})]})]});};export default SignUpPage;","map":{"version":3,"names":["React","useState","Link","useNavigate","supabase","bcrypt","jsx","_jsx","jsxs","_jsxs","SignUpPage","navigate","formData","setFormData","username","email","password","confirmPassword","loading","setLoading","error","setError","success","setSuccess","handleInputChange","e","name","value","target","handleSubmit","data","existingUsers","checkUserError","from","select","eq","limit","length","existingEmails","checkEmailError","salt","genSalt","hashedPassword","hash","dbError","insert","setTimeout","console","code","_error$details","_error$details2","details","includes","message","className","children","type","onChange","placeholder","disabled","onClick","to"],"sources":["D:/Uni/ba/BA_webboard/cafe/src/component/SignUpPage.js"],"sourcesContent":["// SignUpPage.jsx - Simplified with basic signup method\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../style/SignUpPage.css';\r\nimport supabase from './connect';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nconst SignUpPage = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n    \r\n    // Clear error if user is typing\r\n    if (error) {\r\n      setError('');\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = async () => {\r\n    // Basic validation\r\n    if (!formData.username || !formData.email || !formData.password) {\r\n      setError('Please fill all required fields');\r\n      return;\r\n    }\r\n    \r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Check if username already exists\r\n      const { data: existingUsers, error: checkUserError } = await supabase\r\n        .from('user')\r\n        .select('username')\r\n        .eq('username', formData.username)\r\n        .limit(1);\r\n      \r\n      if (checkUserError) throw checkUserError;\r\n      \r\n      if (existingUsers && existingUsers.length > 0) {\r\n        setError('Username is already taken. Please choose a different username.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Check if email already exists\r\n      const { data: existingEmails, error: checkEmailError } = await supabase\r\n        .from('user')\r\n        .select('email')\r\n        .eq('email', formData.email)\r\n        .limit(1);\r\n      \r\n      if (checkEmailError) throw checkEmailError;\r\n      \r\n      if (existingEmails && existingEmails.length > 0) {\r\n        setError('This email is already registered. Please use a different email address or try logging in.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Hash password before storing\r\n      const salt = await bcrypt.genSalt(10);\r\n      const hashedPassword = await bcrypt.hash(formData.password, salt);\r\n      \r\n      // Insert user data into your users table\r\n      const { error: dbError } = await supabase\r\n        .from('user')\r\n        .insert([\r\n          {\r\n            username: formData.username,\r\n            email: formData.email,\r\n            password: hashedPassword\r\n          }\r\n        ]);\r\n      \r\n      if (dbError) throw dbError;\r\n      \r\n      // Success!\r\n      setSuccess('Account created successfully!');\r\n      \r\n      // Reset form\r\n      setFormData({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      });\r\n      \r\n      // Redirect to login page after 2 seconds\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n      }, 2000);\r\n      \r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      \r\n      // Provide more specific error messages based on error codes\r\n      if (error.code === '23505') {\r\n        if (error.details?.includes('email')) {\r\n          setError('This email is already registered. Please use a different email address.');\r\n        } else if (error.details?.includes('username')) {\r\n          setError('This username is already taken. Please choose a different username.');\r\n        } else {\r\n          setError('This account already exists. Please try logging in instead.');\r\n        }\r\n      } else {\r\n        setError(error.message || 'An error occurred during signup');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h1 className=\"signup-title\">Create an account</h1>\r\n      \r\n      {error && (\r\n        <div className=\"server-error\">\r\n          <span className=\"error-icon\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {success && (\r\n        <div className=\"success-message\">\r\n          <span className=\"success-icon\">✓</span>\r\n          {success}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"form-group\">\r\n        <label className=\"form-label\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Choose a username\"\r\n          className=\"form-input\"\r\n          disabled={loading}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"form-group\">\r\n        <label className=\"form-label\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Your email address\"\r\n          className=\"form-input\"\r\n          disabled={loading}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"form-group\">\r\n        <label className=\"form-label\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Create a password\"\r\n          className=\"form-input\"\r\n          disabled={loading}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"form-group\">\r\n        <label className=\"form-label\">Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={formData.confirmPassword}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Confirm your password\"\r\n          className=\"form-input\"\r\n          disabled={loading}\r\n        />\r\n      </div>\r\n      \r\n      <button\r\n        onClick={handleSubmit}\r\n        className=\"submit-button\"\r\n        disabled={loading}\r\n      >\r\n        {loading ? 'Creating Account...' : 'Create Account'}\r\n      </button>\r\n      \r\n      <div className=\"login-text\">\r\n        Already have an account? <Link to=\"/login\" className=\"login-link\">Login</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}