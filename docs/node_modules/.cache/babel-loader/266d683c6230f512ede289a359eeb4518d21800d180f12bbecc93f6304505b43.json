{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\ba\\\\BA_webboard\\\\cafe\\\\src\\\\component\\\\Home.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport supabase from './connect';\nimport '../style/Home.css'; // Import the new CSS file\n\n// Helper to format date (optional)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  if (!dateString) return '';\n  const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\n// Helper to format brief description\nconst formatBriefDescription = (text, maxLength = 120, maxLines = 2) => {\n  if (!text) return 'No description available.';\n  const lines = text.split('\\n');\n  let briefContent = lines.slice(0, maxLines).join('\\n');\n  let wasTruncatedByCharLimit = false;\n  if (briefContent.length > maxLength) {\n    briefContent = briefContent.substring(0, maxLength - 3) + \"...\";\n    wasTruncatedByCharLimit = true;\n  }\n  if (!wasTruncatedByCharLimit && lines.length > maxLines) {\n    briefContent += \"...\";\n  }\n  return briefContent;\n};\nconst PostCard = ({\n  post\n}) => {\n  _s();\n  var _post$user;\n  const navigate = useNavigate();\n  const authorDisplayName = ((_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user.username) || `User ID: ${post.user_id ? post.user_id.substring(0, 8) : 'N/A'}...`;\n  const displayDescription = formatBriefDescription(post.post_detail);\n\n  // --- MODIFIED Image URL Extraction and Display Logic ---\n  const allImageUrls = [];\n  let imagesProcessedFromPostImageArray = false;\n  if (post.post_image) {\n    if (typeof post.post_image === 'string' && post.post_image.startsWith('[') && post.post_image.endsWith(']')) {\n      try {\n        const parsedImages = JSON.parse(post.post_image);\n        if (Array.isArray(parsedImages)) {\n          parsedImages.forEach(url => {\n            if (typeof url === 'string' && url.trim() !== '') {\n              allImageUrls.push(url.trim());\n            }\n          });\n          imagesProcessedFromPostImageArray = true;\n        } else if (typeof post.post_image === 'string' && post.post_image.trim() !== '') {\n          allImageUrls.push(post.post_image.trim());\n        }\n      } catch (e) {\n        console.warn('Failed to parse post_image JSON. Treating as a single URL if it\\'s a string:', post.post_image, e);\n        if (typeof post.post_image === 'string' && post.post_image.trim() !== '') {\n          allImageUrls.push(post.post_image.trim());\n        }\n      }\n    } else if (typeof post.post_image === 'string' && post.post_image.trim() !== '') {\n      allImageUrls.push(post.post_image.trim());\n    }\n  }\n  if (!imagesProcessedFromPostImageArray) {\n    if (post.post_image_2 && typeof post.post_image_2 === 'string' && post.post_image_2.trim() !== '') {\n      allImageUrls.push(post.post_image_2.trim());\n    }\n    if (post.post_image_3 && typeof post.post_image_3 === 'string' && post.post_image_3.trim() !== '') {\n      allImageUrls.push(post.post_image_3.trim());\n    }\n  }\n  const imageSlots = [];\n  const MAX_UI_IMAGE_SLOTS = 3;\n  if (allImageUrls.length === 0) {\n    imageSlots.push({\n      type: 'placeholder',\n      text: 'No Image'\n    });\n  } else if (allImageUrls.length === 1) {\n    imageSlots.push({\n      type: 'real',\n      src: allImageUrls[0],\n      alt: `${post.post_title || 'Post'} image 1`\n    });\n  } else {\n    imageSlots.push({\n      type: 'real',\n      src: allImageUrls[0],\n      alt: `${post.post_title || 'Post'} image 1`\n    });\n    if (MAX_UI_IMAGE_SLOTS >= 2) {\n      imageSlots.push({\n        type: 'real',\n        src: allImageUrls[1],\n        alt: `${post.post_title || 'Post'} image 2`\n      });\n    }\n    if (MAX_UI_IMAGE_SLOTS >= 3) {\n      if (allImageUrls.length === 3) {\n        imageSlots.push({\n          type: 'real',\n          src: allImageUrls[2],\n          alt: `${post.post_title || 'Post'} image 3`\n        });\n      } else if (allImageUrls.length > 3) {\n        const remainingCount = allImageUrls.length - 2;\n        imageSlots.push({\n          type: 'plusMore',\n          text: `+${remainingCount}`\n        });\n      }\n    }\n  }\n  // --- END OF MODIFIED Image URL Extraction and Display Logic ---\n\n  const handleCardClick = () => {\n    if (post && post.post_id) {\n      console.log('Navigating to post ID:', post.post_id);\n      navigate(`/post/${post.post_id}`);\n    } else {\n      console.error(\"PostCard: post_id is missing, cannot navigate.\");\n    }\n  };\n  const [isHovered, setIsHovered] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${isHovered ? 'card-hovered' : ''}`,\n    onClick: handleCardClick,\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    role: \"link\",\n    tabIndex: 0,\n    onKeyPress: e => {\n      if (e.key === 'Enter' || e.key === ' ') handleCardClick();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"cardTitle\",\n          children: post.post_title || 'Untitled Post'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cardMeta\",\n          children: [\"By \", authorDisplayName, \" \\u2022 \", formatDate(post.created_at)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), post.post_region && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"regionTag\",\n        children: post.post_region\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"cardDescription\",\n      children: displayDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageContainer\",\n      children: imageSlots.slice(0, MAX_UI_IMAGE_SLOTS).map((img, index) => {\n        if (img.type === 'real') {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img.src,\n            alt: img.alt,\n            className: \"postImage\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 20\n          }, this);\n        } else if (img.type === 'plusMore') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plusMoreImages\",\n            children: img.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 20\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imagePlaceholder\",\n            children: img.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 20\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardActions\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"actionItem\",\n        children: [\"\\uD83D\\uDC4D \", post.post_like || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"actionItem\",\n        children: [\"\\uD83D\\uDC4E \", post.post_dislike || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"actionItem\",\n        children: [\"\\uD83D\\uDCAC \", post.comment_count || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(PostCard, \"XLqfTMlh7izMyaaAwegOrHDWMIs=\", false, function () {\n  return [useNavigate];\n});\n_c = PostCard;\nconst HomePage = () => {\n  _s2();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('All Region');\n  const regions = ['All Region', 'North', 'East', 'South', 'West', 'Central'];\n  const fetchPosts = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      let query = supabase.from('post').select(`\n          *,\n          user ( username )\n        `).order('created_at', {\n        ascending: false\n      });\n      if (selectedRegion !== 'All Region') {\n        query = query.eq('post_region', selectedRegion);\n      }\n      if (searchTerm.trim() !== '') {\n        query = query.or(`post_title.ilike.%${searchTerm.trim()}%,post_detail.ilike.%${searchTerm.trim()}%`);\n      }\n      const {\n        data,\n        error: fetchError\n      } = await query;\n      if (fetchError) {\n        throw fetchError;\n      }\n      setPosts(data || []);\n    } catch (err) {\n      console.error('Error fetching posts:', err);\n      setError(err.message || 'Failed to fetch posts.');\n      setPosts([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [searchTerm, selectedRegion]);\n  useEffect(() => {\n    fetchPosts();\n  }, [fetchPosts]);\n  const handleSearch = e => {\n    e.preventDefault();\n    // fetchPosts(); // Not strictly necessary here as useEffect already listens to searchTerm\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"searchSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sectionTitle\",\n          children: \"Search Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearch,\n          className: \"searchInputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search title or detail\",\n            className: \"searchInput\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"searchButton\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"filterSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"sectionTitle\",\n          children: \"Filter By Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), regions.map(region => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `regionButton ${selectedRegion === region ? 'selectedRegionButton' : ''}`,\n          onClick: () => setSelectedRegion(region),\n          children: region\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"pageTitle\",\n        children: \"For you page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loadingText\",\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorText\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }, this), !loading && !error && posts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"noPostsText\",\n        children: \"No posts found. Try adjusting your search or filters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), !loading && !error && posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post\n        }, post.post_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s2(HomePage, \"EV5NVrwzxeZZQBfuO4ZcVeyb0M4=\");\n_c2 = HomePage;\nexport default HomePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostCard\");\n$RefreshReg$(_c2, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","supabase","jsxDEV","_jsxDEV","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","formatBriefDescription","text","maxLength","maxLines","lines","split","briefContent","slice","join","wasTruncatedByCharLimit","length","substring","PostCard","post","_s","_post$user","navigate","authorDisplayName","user","username","user_id","displayDescription","post_detail","allImageUrls","imagesProcessedFromPostImageArray","post_image","startsWith","endsWith","parsedImages","JSON","parse","Array","isArray","forEach","url","trim","push","e","console","warn","post_image_2","post_image_3","imageSlots","MAX_UI_IMAGE_SLOTS","type","src","alt","post_title","remainingCount","handleCardClick","post_id","log","error","isHovered","setIsHovered","className","onClick","onMouseEnter","onMouseLeave","role","tabIndex","onKeyPress","key","children","fileName","_jsxFileName","lineNumber","columnNumber","created_at","post_region","map","img","index","post_like","post_dislike","comment_count","_c","HomePage","_s2","posts","setPosts","loading","setLoading","setError","searchTerm","setSearchTerm","selectedRegion","setSelectedRegion","regions","fetchPosts","query","from","select","order","ascending","eq","or","data","fetchError","err","message","handleSearch","preventDefault","onSubmit","placeholder","value","onChange","target","region","_c2","$RefreshReg$"],"sources":["D:/Uni/ba/BA_webboard/cafe/src/component/Home.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport supabase from './connect';\r\nimport '../style/Home.css'; // Import the new CSS file\r\n\r\n// Helper to format date (optional)\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return '';\r\n  const options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n  return new Date(dateString).toLocaleDateString(undefined, options);\r\n};\r\n\r\n// Helper to format brief description\r\nconst formatBriefDescription = (text, maxLength = 120, maxLines = 2) => {\r\n  if (!text) return 'No description available.';\r\n\r\n  const lines = text.split('\\n');\r\n  let briefContent = lines.slice(0, maxLines).join('\\n');\r\n  let wasTruncatedByCharLimit = false;\r\n\r\n  if (briefContent.length > maxLength) {\r\n    briefContent = briefContent.substring(0, maxLength - 3) + \"...\";\r\n    wasTruncatedByCharLimit = true;\r\n  }\r\n\r\n  if (!wasTruncatedByCharLimit && lines.length > maxLines) {\r\n    briefContent += \"...\";\r\n  }\r\n\r\n  return briefContent;\r\n};\r\n\r\nconst PostCard = ({ post }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const authorDisplayName = post.user?.username || `User ID: ${post.user_id ? post.user_id.substring(0, 8) : 'N/A'}...`;\r\n  const displayDescription = formatBriefDescription(post.post_detail);\r\n\r\n  // --- MODIFIED Image URL Extraction and Display Logic ---\r\n  const allImageUrls = [];\r\n  let imagesProcessedFromPostImageArray = false;\r\n\r\n  if (post.post_image) {\r\n    if (typeof post.post_image === 'string' && post.post_image.startsWith('[') && post.post_image.endsWith(']')) {\r\n      try {\r\n        const parsedImages = JSON.parse(post.post_image);\r\n        if (Array.isArray(parsedImages)) {\r\n          parsedImages.forEach(url => {\r\n            if (typeof url === 'string' && url.trim() !== '') {\r\n              allImageUrls.push(url.trim());\r\n            }\r\n          });\r\n          imagesProcessedFromPostImageArray = true;\r\n        } else if (typeof post.post_image === 'string' && post.post_image.trim() !== '') {\r\n          allImageUrls.push(post.post_image.trim());\r\n        }\r\n      } catch (e) {\r\n        console.warn('Failed to parse post_image JSON. Treating as a single URL if it\\'s a string:', post.post_image, e);\r\n        if (typeof post.post_image === 'string' && post.post_image.trim() !== '') {\r\n          allImageUrls.push(post.post_image.trim());\r\n        }\r\n      }\r\n    } else if (typeof post.post_image === 'string' && post.post_image.trim() !== '') {\r\n      allImageUrls.push(post.post_image.trim());\r\n    }\r\n  }\r\n\r\n  if (!imagesProcessedFromPostImageArray) {\r\n    if (post.post_image_2 && typeof post.post_image_2 === 'string' && post.post_image_2.trim() !== '') {\r\n      allImageUrls.push(post.post_image_2.trim());\r\n    }\r\n    if (post.post_image_3 && typeof post.post_image_3 === 'string' && post.post_image_3.trim() !== '') {\r\n      allImageUrls.push(post.post_image_3.trim());\r\n    }\r\n  }\r\n\r\n  const imageSlots = [];\r\n  const MAX_UI_IMAGE_SLOTS = 3;\r\n\r\n  if (allImageUrls.length === 0) {\r\n    imageSlots.push({ type: 'placeholder', text: 'No Image' });\r\n  } else if (allImageUrls.length === 1) {\r\n    imageSlots.push({ type: 'real', src: allImageUrls[0], alt: `${post.post_title || 'Post'} image 1` });\r\n  } else {\r\n    imageSlots.push({ type: 'real', src: allImageUrls[0], alt: `${post.post_title || 'Post'} image 1` });\r\n    if (MAX_UI_IMAGE_SLOTS >= 2) {\r\n      imageSlots.push({ type: 'real', src: allImageUrls[1], alt: `${post.post_title || 'Post'} image 2` });\r\n    }\r\n    if (MAX_UI_IMAGE_SLOTS >= 3) {\r\n      if (allImageUrls.length === 3) {\r\n        imageSlots.push({ type: 'real', src: allImageUrls[2], alt: `${post.post_title || 'Post'} image 3` });\r\n      } else if (allImageUrls.length > 3) {\r\n        const remainingCount = allImageUrls.length - 2;\r\n        imageSlots.push({ type: 'plusMore', text: `+${remainingCount}` });\r\n      }\r\n    }\r\n  }\r\n  // --- END OF MODIFIED Image URL Extraction and Display Logic ---\r\n\r\n  const handleCardClick = () => {\r\n    if (post && post.post_id) {\r\n      console.log('Navigating to post ID:', post.post_id);\r\n      navigate(`/post/${post.post_id}`);\r\n    } else {\r\n      console.error(\"PostCard: post_id is missing, cannot navigate.\");\r\n    }\r\n  };\r\n\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={`card ${isHovered ? 'card-hovered' : ''}`}\r\n      onClick={handleCardClick}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n      role=\"link\"\r\n      tabIndex={0}\r\n      onKeyPress={(e) => { if (e.key === 'Enter' || e.key === ' ') handleCardClick(); }}\r\n    >\r\n      <div className=\"cardHeader\">\r\n        <div>\r\n          <h3 className=\"cardTitle\">{post.post_title || 'Untitled Post'}</h3>\r\n          <p className=\"cardMeta\">\r\n            By {authorDisplayName} • {formatDate(post.created_at)}\r\n          </p>\r\n        </div>\r\n        {post.post_region && <span className=\"regionTag\">{post.post_region}</span>}\r\n      </div>\r\n\r\n      <p className=\"cardDescription\">{displayDescription}</p>\r\n\r\n      <div className=\"imageContainer\">\r\n        {imageSlots.slice(0, MAX_UI_IMAGE_SLOTS).map((img, index) => {\r\n          if (img.type === 'real') {\r\n            return <img key={index} src={img.src} alt={img.alt} className=\"postImage\" />;\r\n          } else if (img.type === 'plusMore') {\r\n            return <div key={index} className=\"plusMoreImages\">{img.text}</div>;\r\n          } else {\r\n            return <div key={index} className=\"imagePlaceholder\">{img.text}</div>;\r\n          }\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"cardActions\">\r\n        <span className=\"actionItem\">👍 {post.post_like || 0}</span>\r\n        <span className=\"actionItem\">👎 {post.post_dislike || 0}</span>\r\n        <span className=\"actionItem\">💬 {post.comment_count || 0}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HomePage = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedRegion, setSelectedRegion] = useState('All Region');\r\n\r\n  const regions = ['All Region', 'North', 'East', 'South', 'West', 'Central'];\r\n\r\n  const fetchPosts = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      let query = supabase\r\n        .from('post')\r\n        .select(`\r\n          *,\r\n          user ( username )\r\n        `)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (selectedRegion !== 'All Region') {\r\n        query = query.eq('post_region', selectedRegion);\r\n      }\r\n\r\n      if (searchTerm.trim() !== '') {\r\n        query = query.or(`post_title.ilike.%${searchTerm.trim()}%,post_detail.ilike.%${searchTerm.trim()}%`);\r\n      }\r\n\r\n      const { data, error: fetchError } = await query;\r\n\r\n      if (fetchError) {\r\n        throw fetchError;\r\n      }\r\n      setPosts(data || []);\r\n    } catch (err) {\r\n      console.error('Error fetching posts:', err);\r\n      setError(err.message || 'Failed to fetch posts.');\r\n      setPosts([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [searchTerm, selectedRegion]);\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [fetchPosts]);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    // fetchPosts(); // Not strictly necessary here as useEffect already listens to searchTerm\r\n  };\r\n\r\n  return (\r\n    <div className=\"pageContainer\">\r\n      <aside className=\"sidebar\">\r\n        <section className=\"searchSection\">\r\n          <h2 className=\"sectionTitle\">Search Posts</h2>\r\n          <form onSubmit={handleSearch} className=\"searchInputContainer\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search title or detail\"\r\n              className=\"searchInput\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <button type=\"submit\" className=\"searchButton\">Search</button>\r\n          </form>\r\n        </section>\r\n\r\n        <section className=\"filterSection\">\r\n          <h2 className=\"sectionTitle\">Filter By Region</h2>\r\n          {regions.map((region) => (\r\n            <button\r\n              key={region}\r\n              className={`regionButton ${selectedRegion === region ? 'selectedRegionButton' : ''}`}\r\n              onClick={() => setSelectedRegion(region)}\r\n            >\r\n              {region}\r\n            </button>\r\n          ))}\r\n        </section>\r\n      </aside>\r\n\r\n      <main className=\"mainContent\">\r\n        <h1 className=\"pageTitle\">For you page</h1>\r\n        {loading && <p className=\"loadingText\">Loading posts...</p>}\r\n        {error && <p className=\"errorText\">Error: {error}</p>}\r\n        {!loading && !error && posts.length === 0 && (\r\n          <p className=\"noPostsText\">No posts found. Try adjusting your search or filters.</p>\r\n        )}\r\n        {!loading && !error && posts.length > 0 && (\r\n          <div>\r\n            {posts.map((post) => (\r\n              <PostCard key={post.post_id} post={post} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}