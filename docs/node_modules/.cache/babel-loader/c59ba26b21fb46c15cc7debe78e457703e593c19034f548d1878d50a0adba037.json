{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\ba\\\\BA_webboard\\\\cafe\\\\src\\\\component\\\\CreateReview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport supabase from './connect'; // Make sure this path is correct\nimport '../style/CreateReview.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateReview = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [reviewText, setReviewText] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [imageFiles, setImageFiles] = useState([]); // Changed to array\n  const [imagePreviewUrls, setImagePreviewUrls] = useState([]); // Changed to array\n  const [uploading, setUploading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [successMsg, setSuccessMsg] = useState('');\n  const regions = ['North', 'South', 'Central', 'West', 'East'];\n  const MAX_FILE_SIZE_MB = 5;\n  const MAX_TOTAL_FILES = 5; // Optional: Limit total number of files\n\n  useEffect(() => {\n    // Clean up object URLs for image previews\n    return () => {\n      imagePreviewUrls.forEach(url => URL.revokeObjectURL(url));\n    };\n  }, [imagePreviewUrls]); // Dependency on the array itself\n\n  const handleImageChange = e => {\n    setErrorMsg('');\n    setSuccessMsg('');\n    const files = e.target.files ? Array.from(e.target.files) : [];\n    if (!files.length) {\n      // Clear existing if no new files are chosen (e.g., user cancels file dialog)\n      // Or, you might want to append if that's the desired UX.\n      // For simplicity, let's replace.\n      imagePreviewUrls.forEach(url => URL.revokeObjectURL(url));\n      setImageFiles([]);\n      setImagePreviewUrls([]);\n      return;\n    }\n\n    // Optional: Limit total number of files\n    if (files.length > MAX_TOTAL_FILES) {\n      setErrorMsg(`You can upload a maximum of ${MAX_TOTAL_FILES} images.`);\n      e.target.value = null; // Reset file input\n      return;\n    }\n    const newImageFiles = [];\n    const newPreviewUrls = [];\n    let validationError = false;\n    for (const file of files) {\n      if (file.size > MAX_FILE_SIZE_MB * 1024 * 1024) {\n        setErrorMsg(`Image \"${file.name}\" exceeds ${MAX_FILE_SIZE_MB}MB limit.`);\n        validationError = true;\n        break; // Stop processing further files\n      }\n      newImageFiles.push(file);\n    }\n    if (validationError) {\n      // Don't set any files if one is invalid\n      imagePreviewUrls.forEach(url => URL.revokeObjectURL(url)); // Revoke any previous previews\n      setImageFiles([]);\n      setImagePreviewUrls([]);\n      e.target.value = null; // Reset file input\n      return;\n    }\n\n    // Revoke old URLs before creating new ones\n    imagePreviewUrls.forEach(url => URL.revokeObjectURL(url));\n\n    // Create new preview URLs\n    newImageFiles.forEach(file => newPreviewUrls.push(URL.createObjectURL(file)));\n    setImageFiles(newImageFiles);\n    setImagePreviewUrls(newPreviewUrls);\n  };\n  const resetForm = () => {\n    setTitle('');\n    setReviewText('');\n    setSelectedRegion(null);\n    setImageFiles([]);\n    imagePreviewUrls.forEach(url => URL.revokeObjectURL(url)); // Clean up\n    setImagePreviewUrls([]);\n    // Reset file input visually\n    const fileInput = document.getElementById('images'); // Note ID change if you change it\n    if (fileInput) fileInput.value = null;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setUploading(true);\n    setErrorMsg('');\n    setSuccessMsg('');\n    if (!title || !reviewText || !selectedRegion) {\n      setErrorMsg('Please fill in Title, Review, and select a Region.');\n      setUploading(false);\n      return;\n    }\n    const cleanRegion = selectedRegion === null || selectedRegion === void 0 ? void 0 : selectedRegion.replace(/[0-9]/g, '');\n    const uploadedImagePublicUrls = [];\n\n    // 1. Upload images if selected\n    if (imageFiles.length > 0) {\n      const uploadPromises = imageFiles.map(async file => {\n        const fileExt = file.name.split('.').pop();\n        // Add more uniqueness to filename to avoid collisions if multiple users upload simultaneously\n        const fileName = `${Date.now()}-${Math.random().toString(36).substring(2, 10)}.${fileExt}`;\n        // Simplified path - avoid using 'public/' prefix\n        const filePath = fileName;\n        try {\n          const {\n            error: uploadError\n          } = await supabase.storage.from('image').upload(filePath, file, {\n            cacheControl: '3600',\n            upsert: false\n          });\n          if (uploadError) {\n            console.error(`Image Upload Error for ${file.name}:`, uploadError);\n            throw new Error(`Failed to upload ${file.name}: ${uploadError.message}`);\n          }\n          const {\n            data: urlData\n          } = supabase.storage.from('image').getPublicUrl(filePath);\n          if (!urlData || !urlData.publicUrl) {\n            throw new Error(`Image ${file.name} uploaded, but could not get its URL.`);\n          }\n          return urlData.publicUrl;\n        } catch (err) {\n          console.error('Unexpected upload error:', err);\n          throw err;\n        }\n      });\n      try {\n        const urls = await Promise.all(uploadPromises);\n        uploadedImagePublicUrls.push(...urls);\n      } catch (error) {\n        setErrorMsg(error.message + ' Review not posted.');\n        setUploading(false);\n        return;\n      }\n    }\n\n    // 2. Prepare review data\n    const reviewData = {\n      post_title: title,\n      post_detail: reviewText,\n      post_region: cleanRegion,\n      post_like: 0,\n      post_dislike: 0\n      // Don't include post_id field to avoid primary key conflicts\n    };\n    if (uploadedImagePublicUrls.length > 0) {\n      reviewData.post_image = uploadedImagePublicUrls;\n    }\n    try {\n      // 3. Insert review into the database\n      const {\n        data: insertData,\n        error: insertError\n      } = await supabase.from('post').insert([reviewData]).select();\n      setUploading(false);\n      if (insertError) {\n        console.error('Insert Error:', insertError);\n        if (insertError.code === '23505') {\n          setErrorMsg('This post appears to be a duplicate. Please try with a different title or content.');\n        } else {\n          setErrorMsg(`Failed to post review: ${insertError.message}. Check console.`);\n        }\n      } else {\n        console.log('Inserted Review:', insertData);\n        setSuccessMsg('Review posted successfully!');\n        resetForm();\n      }\n    } catch (error) {\n      console.error('Unexpected error:', error);\n      setErrorMsg(`An unexpected error occurred: ${error.message}`);\n      setUploading(false);\n    }\n  };\n  const handleCancel = () => {\n    resetForm();\n    setErrorMsg('');\n    setSuccessMsg('');\n    console.log('Form cancelled');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"heading\",\n        children: \"Create New Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorText\",\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 22\n      }, this), successMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"successText\",\n        children: successMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"label\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            className: \"input\",\n            placeholder: \"E.g. Amazing Italian Restaurant in Downtown\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"regionContainer\",\n            children: regions.map((region, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `regionButton ${selectedRegion === region + index ? 'selectedRegionButton' : ''}`,\n              onClick: () => {\n                setSelectedRegion(region + index);\n                setErrorMsg('');\n              },\n              children: region\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"review\",\n            className: \"label\",\n            children: \"Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"review\",\n            className: \"textarea\",\n            placeholder: \"Share your experience...\",\n            value: reviewText,\n            onChange: e => setReviewText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"images\",\n            className: \"label\",\n            children: [\"Upload Images (Optional, max \", MAX_FILE_SIZE_MB, \"MB each, \", MAX_TOTAL_FILES, \" files max)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"images\",\n            accept: \"image/png, image/jpeg, image/gif\",\n            multiple: true,\n            onChange: handleImageChange,\n            className: \"input\",\n            disabled: uploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), imagePreviewUrls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imagePreviewContainer\",\n            children: imagePreviewUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: url,\n              alt: `Preview ${index + 1}`,\n              className: \"imagePreview\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancelButton\",\n            onClick: handleCancel,\n            disabled: uploading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"postButton\",\n            disabled: uploading,\n            children: uploading ? 'Posting...' : 'Post Review'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateReview, \"q93PLosAHBPfCye49hsrOfo6dIQ=\");\n_c = CreateReview;\nexport default CreateReview;\nvar _c;\n$RefreshReg$(_c, \"CreateReview\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","CreateReview","_s","title","setTitle","reviewText","setReviewText","selectedRegion","setSelectedRegion","imageFiles","setImageFiles","imagePreviewUrls","setImagePreviewUrls","uploading","setUploading","errorMsg","setErrorMsg","successMsg","setSuccessMsg","regions","MAX_FILE_SIZE_MB","MAX_TOTAL_FILES","forEach","url","URL","revokeObjectURL","handleImageChange","e","files","target","Array","from","length","value","newImageFiles","newPreviewUrls","validationError","file","size","name","push","createObjectURL","resetForm","fileInput","document","getElementById","handleSubmit","preventDefault","cleanRegion","replace","uploadedImagePublicUrls","uploadPromises","map","fileExt","split","pop","fileName","Date","now","Math","random","toString","substring","filePath","error","uploadError","storage","upload","cacheControl","upsert","console","Error","message","data","urlData","getPublicUrl","publicUrl","err","urls","Promise","all","reviewData","post_title","post_detail","post_region","post_like","post_dislike","post_image","insertData","insertError","insert","select","code","log","handleCancel","className","children","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","onChange","region","index","onClick","accept","multiple","disabled","src","alt","_c","$RefreshReg$"],"sources":["D:/Uni/ba/BA_webboard/cafe/src/component/CreateReview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport supabase from './connect'; // Make sure this path is correct\nimport '../style/CreateReview.css'; // Import the CSS file\n\nconst CreateReview = () => {\n  const [title, setTitle] = useState('');\n  const [reviewText, setReviewText] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [imageFiles, setImageFiles] = useState([]); // Changed to array\n  const [imagePreviewUrls, setImagePreviewUrls] = useState([]); // Changed to array\n  const [uploading, setUploading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [successMsg, setSuccessMsg] = useState('');\n\n  const regions = ['North', 'South', 'Central', 'West', 'East'];\n  const MAX_FILE_SIZE_MB = 5;\n  const MAX_TOTAL_FILES = 5; // Optional: Limit total number of files\n\n  useEffect(() => {\n    // Clean up object URLs for image previews\n    return () => {\n      imagePreviewUrls.forEach(url => URL.revokeObjectURL(url));\n    };\n  }, [imagePreviewUrls]); // Dependency on the array itself\n\n  const handleImageChange = (e) => {\n    setErrorMsg('');\n    setSuccessMsg('');\n\n    const files = e.target.files ? Array.from(e.target.files) : [];\n\n    if (!files.length) {\n      // Clear existing if no new files are chosen (e.g., user cancels file dialog)\n      // Or, you might want to append if that's the desired UX.\n      // For simplicity, let's replace.\n      imagePreviewUrls.forEach(url => URL.revokeObjectURL(url));\n      setImageFiles([]);\n      setImagePreviewUrls([]);\n      return;\n    }\n\n    // Optional: Limit total number of files\n    if (files.length > MAX_TOTAL_FILES) {\n        setErrorMsg(`You can upload a maximum of ${MAX_TOTAL_FILES} images.`);\n        e.target.value = null; // Reset file input\n        return;\n    }\n\n    const newImageFiles = [];\n    const newPreviewUrls = [];\n    let validationError = false;\n\n    for (const file of files) {\n      if (file.size > MAX_FILE_SIZE_MB * 1024 * 1024) {\n        setErrorMsg(`Image \"${file.name}\" exceeds ${MAX_FILE_SIZE_MB}MB limit.`);\n        validationError = true;\n        break; // Stop processing further files\n      }\n      newImageFiles.push(file);\n    }\n\n    if (validationError) {\n      // Don't set any files if one is invalid\n      imagePreviewUrls.forEach(url => URL.revokeObjectURL(url)); // Revoke any previous previews\n      setImageFiles([]);\n      setImagePreviewUrls([]);\n      e.target.value = null; // Reset file input\n      return;\n    }\n\n    // Revoke old URLs before creating new ones\n    imagePreviewUrls.forEach(url => URL.revokeObjectURL(url));\n\n    // Create new preview URLs\n    newImageFiles.forEach(file => newPreviewUrls.push(URL.createObjectURL(file)));\n\n    setImageFiles(newImageFiles);\n    setImagePreviewUrls(newPreviewUrls);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setReviewText('');\n    setSelectedRegion(null);\n    setImageFiles([]);\n    imagePreviewUrls.forEach(url => URL.revokeObjectURL(url)); // Clean up\n    setImagePreviewUrls([]);\n    // Reset file input visually\n    const fileInput = document.getElementById('images'); // Note ID change if you change it\n    if (fileInput) fileInput.value = null;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setUploading(true);\n    setErrorMsg('');\n    setSuccessMsg('');\n\n    if (!title || !reviewText || !selectedRegion) {\n      setErrorMsg('Please fill in Title, Review, and select a Region.');\n      setUploading(false);\n      return;\n    }\n\n    const cleanRegion = selectedRegion?.replace(/[0-9]/g, '');\n    const uploadedImagePublicUrls = [];\n\n    // 1. Upload images if selected\n    if (imageFiles.length > 0) {\n      const uploadPromises = imageFiles.map(async (file) => {\n        const fileExt = file.name.split('.').pop();\n        // Add more uniqueness to filename to avoid collisions if multiple users upload simultaneously\n        const fileName = `${Date.now()}-${Math.random().toString(36).substring(2, 10)}.${fileExt}`;\n        // Simplified path - avoid using 'public/' prefix\n        const filePath = fileName;\n\n        try {\n          const { error: uploadError } = await supabase.storage\n            .from('image')\n            .upload(filePath, file, {\n              cacheControl: '3600',\n              upsert: false,\n            });\n\n          if (uploadError) {\n            console.error(`Image Upload Error for ${file.name}:`, uploadError);\n            throw new Error(`Failed to upload ${file.name}: ${uploadError.message}`);\n          }\n\n          const { data: urlData } = supabase.storage\n            .from('image')\n            .getPublicUrl(filePath);\n\n          if (!urlData || !urlData.publicUrl) {\n            throw new Error(`Image ${file.name} uploaded, but could not get its URL.`);\n          }\n          return urlData.publicUrl;\n        } catch (err) {\n          console.error('Unexpected upload error:', err);\n          throw err;\n        }\n      });\n\n      try {\n        const urls = await Promise.all(uploadPromises);\n        uploadedImagePublicUrls.push(...urls);\n      } catch (error) {\n        setErrorMsg(error.message + ' Review not posted.');\n        setUploading(false);\n        return;\n      }\n    }\n\n    // 2. Prepare review data\n    const reviewData = {\n      post_title: title,\n      post_detail: reviewText,\n      post_region: cleanRegion,\n      post_like: 0,\n      post_dislike: 0,\n      // Don't include post_id field to avoid primary key conflicts\n    };\n\n    if (uploadedImagePublicUrls.length > 0) {\n      reviewData.post_image = uploadedImagePublicUrls;\n    }\n\n    try {\n      // 3. Insert review into the database\n      const { data: insertData, error: insertError } = await supabase\n        .from('post')\n        .insert([reviewData])\n        .select();\n\n      setUploading(false);\n\n      if (insertError) {\n        console.error('Insert Error:', insertError);\n        if (insertError.code === '23505') {\n          setErrorMsg('This post appears to be a duplicate. Please try with a different title or content.');\n        } else {\n          setErrorMsg(`Failed to post review: ${insertError.message}. Check console.`);\n        }\n      } else {\n        console.log('Inserted Review:', insertData);\n        setSuccessMsg('Review posted successfully!');\n        resetForm();\n      }\n    } catch (error) {\n      console.error('Unexpected error:', error);\n      setErrorMsg(`An unexpected error occurred: ${error.message}`);\n      setUploading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    resetForm();\n    setErrorMsg('');\n    setSuccessMsg('');\n    console.log('Form cancelled');\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"formCard\">\n        <h2 className=\"heading\">Create New Review</h2>\n\n        {errorMsg && <p className=\"errorText\">{errorMsg}</p>}\n        {successMsg && <p className=\"successText\">{successMsg}</p>}\n\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"title\" className=\"label\">Title</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              className=\"input\"\n              placeholder=\"E.g. Amazing Italian Restaurant in Downtown\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n          </div>\n\n          <div>\n            <label className=\"label\">Region</label>\n            <div className=\"regionContainer\">\n              {regions.map((region, index) => (\n                <button\n                  key={index}\n                  type=\"button\"\n                  className={`regionButton ${selectedRegion === region + index ? 'selectedRegionButton' : ''}`}\n                  onClick={() => {\n                    setSelectedRegion(region + index);\n                    setErrorMsg('');\n                  }}\n                >\n                  {region}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          <div>\n            <label htmlFor=\"review\" className=\"label\">Review</label>\n            <textarea\n              id=\"review\"\n              className=\"textarea\"\n              placeholder=\"Share your experience...\"\n              value={reviewText}\n              onChange={(e) => setReviewText(e.target.value)}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"images\" className=\"label\">\n              Upload Images (Optional, max {MAX_FILE_SIZE_MB}MB each, {MAX_TOTAL_FILES} files max)\n            </label>\n            <input\n              type=\"file\"\n              id=\"images\"\n              accept=\"image/png, image/jpeg, image/gif\"\n              multiple\n              onChange={handleImageChange}\n              className=\"input\"\n              disabled={uploading}\n            />\n            {imagePreviewUrls.length > 0 && (\n              <div className=\"imagePreviewContainer\">\n                {imagePreviewUrls.map((url, index) => (\n                  <img\n                    key={index}\n                    src={url}\n                    alt={`Preview ${index + 1}`}\n                    className=\"imagePreview\"\n                  />\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className=\"buttonContainer\">\n            <button\n              type=\"button\"\n              className=\"cancelButton\"\n              onClick={handleCancel}\n              disabled={uploading}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className=\"postButton\"\n              disabled={uploading}\n            >\n              {uploading ? 'Posting...' : 'Post Review'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateReview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}