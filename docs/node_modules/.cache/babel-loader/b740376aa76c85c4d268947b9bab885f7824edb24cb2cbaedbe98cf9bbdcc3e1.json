{"ast":null,"code":"// src/components/PostDetailPage.jsx\nimport React,{useState,useEffect,useCallback}from'react';import{useParams,Link,useNavigate}from'react-router-dom';import supabase from'./connect';// Make sure this path matches your project structure\nimport'../style/PostDetailPage.css';// --- Helper Functions ---\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const formatDate=function(dateString){let includeTime=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!dateString)return'';const options={year:'numeric',month:'short',day:'numeric',...(includeTime&&{hour:'2-digit',minute:'2-digit'})};return new Date(dateString).toLocaleDateString(undefined,options);};const getAllImageUrls=post=>{const urls=[];if(!post)return urls;let imagesProcessedFromPostImageArray=false;if(post.post_image){if(typeof post.post_image==='string'&&post.post_image.startsWith('[')&&post.post_image.endsWith(']')){try{const parsedImages=JSON.parse(post.post_image);if(Array.isArray(parsedImages)){parsedImages.forEach(url=>{if(typeof url==='string'&&url.trim()!=='')urls.push(url.trim());});imagesProcessedFromPostImageArray=true;}else if(typeof post.post_image==='string'&&post.post_image.trim()!==''){urls.push(post.post_image.trim());}}catch(e){if(typeof post.post_image==='string'&&post.post_image.trim()!==''){urls.push(post.post_image.trim());}}}else if(typeof post.post_image==='string'&&post.post_image.trim()!==''){urls.push(post.post_image.trim());}}if(!imagesProcessedFromPostImageArray){if(post.post_image_2&&typeof post.post_image_2==='string'&&post.post_image_2.trim()!==''){urls.push(post.post_image_2.trim());}if(post.post_image_3&&typeof post.post_image_3==='string'&&post.post_image_3.trim()!==''){urls.push(post.post_image_3.trim());}}return urls;};// Function to get related posts by region\nconst getRegionDescription=region=>{const descriptions={'South':'Southern establishments are famous for their hospitality and traditional recipes.','Central':'Central area offers a variety of dining experiences in the heart of the city.','North':'Northern region is known for its cozy cafes and hearty meals.','East':'Eastern establishments feature unique fusion cuisine and scenic views.','West':'Western area is famous for trendy spots and innovative dining concepts.'};return descriptions[region]||'This region offers unique dining experiences and local specialties.';};const PostDetailPage=_ref=>{var _post$user;let{checklogin,userData}=_ref;const{postId}=useParams();const[post,setPost]=useState(null);const[loadingPost,setLoadingPost]=useState(true);const[error,setError]=useState(null);const[isUpdatingVotes,setIsUpdatingVotes]=useState(false);const[userVote,setUserVote]=useState({liked:false,disliked:false});const navigate=useNavigate();// --- Comments State ---\nconst[comments,setComments]=useState([]);const[loadingComments,setLoadingComments]=useState(true);const[newCommentText,setNewCommentText]=useState('');const[isSubmittingComment,setIsSubmittingComment]=useState(false);const[commentVotes,setCommentVotes]=useState({});const[isUpdatingCommentVote,setIsUpdatingCommentVote]=useState(false);// --- Related Posts State ---\nconst[relatedPosts,setRelatedPosts]=useState([]);const[loadingRelated,setLoadingRelated]=useState(true);// Fetch post details\nuseEffect(()=>{const fetchPostDetails=async()=>{if(!postId)return;setLoadingPost(true);setError(null);try{const{data,error:fetchError}=await supabase.from('post').select(`\n            *,\n            user ( username )\n          `).eq('post_id',postId).single();if(fetchError)throw fetchError;if(!data)throw new Error('Post not found');console.log('Post data:',data);// Debug: log the retrieved post\nsetPost(data);const storedVote=localStorage.getItem(`post-${postId}-vote`);if(storedVote)setUserVote(JSON.parse(storedVote));// Fetch related posts if we have a region\nif(data.post_region){fetchRelatedPosts(data.post_region,data.post_id);}}catch(err){console.error('Error fetching post details:',err);setError(err.message||'Failed to load post.');}finally{setLoadingPost(false);}};fetchPostDetails();},[postId]);// Fetch related posts\nconst fetchRelatedPosts=async(region,currentPostId)=>{setLoadingRelated(true);try{const{data,error}=await supabase.from('post').select(`\n          post_id,\n          post_title,\n          user_id,\n          user:user_id (username)\n        `).eq('post_region',region).neq('post_id',currentPostId).limit(3);if(error)throw error;setRelatedPosts(data||[]);}catch(err){console.error('Error fetching related posts:',err);// Don't set error state to avoid disrupting the main content\n}finally{setLoadingRelated(false);}};// Fetch comments\nconst fetchComments=useCallback(async()=>{if(!postId)return;setLoadingComments(true);try{// Simplified query to avoid join issues\nconst{data,error:commentsError}=await supabase.from('comment').select('*').eq('post_id',postId);// .order('created_at', { ascending: true });\nif(commentsError)throw commentsError;console.log('Comments data:',data);// Debug: log the retrieved comments\n// Now fetch user details separately for each comment\nconst commentsWithUsers=await Promise.all((data||[]).map(async comment=>{if(!comment.user_id)return{...comment,user:null};const{data:userData,error:userError}=await supabase.from('user').select('username').eq('user_id',comment.user_id).single();if(userError){console.error('Error fetching user for comment:',userError);return{...comment,user:null};}return{...comment,user:userData};}));setComments(commentsWithUsers||[]);}catch(err){console.error('Error fetching comments:',err);}finally{setLoadingComments(false);}},[postId]);useEffect(()=>{fetchComments();},[fetchComments]);// Load saved comment votes from localStorage\nuseEffect(()=>{if(postId){const savedCommentVotes=localStorage.getItem(`post-${postId}-comment-votes`);if(savedCommentVotes){try{setCommentVotes(JSON.parse(savedCommentVotes));}catch(e){console.error('Error parsing saved comment votes:',e);}}}},[postId]);const handleVote=async voteType=>{if(!post||isUpdatingVotes)return;setIsUpdatingVotes(true);const currentLikes=post.post_like||0;const currentDislikes=post.post_dislike||0;let newLikes=currentLikes;let newDislikes=currentDislikes;let newUserVote={...userVote};const originalPostState={...post};const originalUserVoteState={...userVote};if(voteType==='like'){if(userVote.liked){newLikes=currentLikes-1;newUserVote.liked=false;}else{newLikes=currentLikes+1;newUserVote.liked=true;if(userVote.disliked){newDislikes=currentDislikes-1;newUserVote.disliked=false;}}}else if(voteType==='dislike'){if(userVote.disliked){newDislikes=currentDislikes-1;newUserVote.disliked=false;}else{newDislikes=currentDislikes+1;newUserVote.disliked=true;if(userVote.liked){newLikes=currentLikes-1;newUserVote.liked=false;}}}setPost(p=>({...p,post_like:Math.max(0,newLikes),post_dislike:Math.max(0,newDislikes)}));setUserVote(newUserVote);localStorage.setItem(`post-${postId}-vote`,JSON.stringify(newUserVote));try{const{error:updateError}=await supabase.from('post').update({post_like:Math.max(0,newLikes),post_dislike:Math.max(0,newDislikes)}).eq('post_id',postId);if(updateError)throw updateError;}catch(err){console.error(`Error updating post vote:`,err);setPost(originalPostState);setUserVote(originalUserVoteState);localStorage.setItem(`post-${postId}-vote`,JSON.stringify(originalUserVoteState));alert(`Failed to update vote. Please try again.`);}finally{setIsUpdatingVotes(false);}};const handleCommentVote=async(commentId,voteType)=>{if(!checklogin||isUpdatingCommentVote){if(!checklogin)alert(\"You must be logged in to vote\");return;}setIsUpdatingCommentVote(true);// Find the comment we're voting on\nconst comment=comments.find(c=>c.comment_id===commentId);if(!comment){setIsUpdatingCommentVote(false);return;}// Get current vote counts\nconst currentLikes=comment.comment_like||0;const currentDislikes=comment.comment_dislike||0;// Get user's current vote on this comment\nconst currentVote=commentVotes[commentId]||{liked:false,disliked:false};// Calculate new vote state\nlet newLikes=currentLikes;let newDislikes=currentDislikes;let newVoteState={...currentVote};if(voteType==='like'){if(currentVote.liked){// User is unliking\nnewLikes=Math.max(0,currentLikes-1);newVoteState.liked=false;}else{// User is liking\nnewLikes=currentLikes+1;newVoteState.liked=true;// If they had disliked before, remove that dislike\nif(currentVote.disliked){newDislikes=Math.max(0,currentDislikes-1);newVoteState.disliked=false;}}}else if(voteType==='dislike'){if(currentVote.disliked){// User is undisliking\nnewDislikes=Math.max(0,currentDislikes-1);newVoteState.disliked=false;}else{// User is disliking\nnewDislikes=currentDislikes+1;newVoteState.disliked=true;// If they had liked before, remove that like\nif(currentVote.liked){newLikes=Math.max(0,currentLikes-1);newVoteState.liked=false;}}}// Save original state for rollback if needed\nconst originalComments=[...comments];const originalCommentVotes={...commentVotes};// Update UI optimistically\nsetComments(comments.map(c=>c.comment_id===commentId?{...c,comment_like:newLikes,comment_dislike:newDislikes}:c));setCommentVotes({...commentVotes,[commentId]:newVoteState});// Save to localStorage\nlocalStorage.setItem(`post-${postId}-comment-votes`,JSON.stringify({...commentVotes,[commentId]:newVoteState}));try{// Update the database\nconst{error:updateError}=await supabase.from('comment').update({comment_like:newLikes,comment_dislike:newDislikes}).eq('comment_id',commentId);if(updateError)throw updateError;}catch(err){console.error('Error updating comment vote:',err);// Roll back to original state\nsetComments(originalComments);setCommentVotes(originalCommentVotes);localStorage.setItem(`post-${postId}-comment-votes`,JSON.stringify(originalCommentVotes));alert('Failed to update vote. Please try again.');}finally{setIsUpdatingCommentVote(false);}};const handleSubmitComment=async e=>{e.preventDefault();if(!newCommentText.trim()){alert(\"Comment cannot be empty\");return;}if(!checklogin||!userData){alert(\"You must be logged in to comment\");return;}if(!postId){alert(\"Post ID is missing\");return;}setIsSubmittingComment(true);console.log(\"Submitting comment with user:\",userData);try{var _userData$email;// First, insert the comment\nconst{data:newComment,error:insertError}=await supabase.from('comment').insert({post_id:postId,user_id:userData.user_id,comment_detail:newCommentText.trim(),comment_like:0,comment_dislike:0}).select();if(insertError)throw insertError;console.log(\"Comment inserted:\",newComment);if(!Array.isArray(newComment)||newComment.length===0){throw new Error(\"Comment was inserted but no data was returned\");}// Add the new comment to the current state\nconst commentWithUser={...newComment[0],user:{username:userData.username||((_userData$email=userData.email)===null||_userData$email===void 0?void 0:_userData$email.split('@')[0])||'User'}};// Add to comments state\nsetComments(prevComments=>[...prevComments,commentWithUser]);setNewCommentText('');// Update post's comment_count\nif(post){const{error:countError}=await supabase.from('post').update({comment_count:(post.comment_count||0)+1}).eq('post_id',postId);if(countError){console.error(\"Error updating post comment count:\",countError);}else{setPost(prevPost=>({...prevPost,comment_count:(prevPost.comment_count||0)+1}));}}}catch(err){console.error('Error submitting comment:',err);alert('Failed to submit comment: '+(err.message||'Unknown error'));}finally{setIsSubmittingComment(false);}};// Helper to display commenter name\nconst getCommenterName=commentUser=>{if(!commentUser)return'Anonymous';return commentUser.username||'User';};if(loadingPost)return/*#__PURE__*/_jsx(\"p\",{className:\"loadingError\",children:\"Loading post details...\"});if(error)return/*#__PURE__*/_jsxs(\"p\",{className:\"loadingError\",children:[\"Error: \",error,\" \"]});if(!post)return/*#__PURE__*/_jsx(\"p\",{className:\"loadingError\",children:\"Post not found.\"});const authorDisplayName=((_post$user=post.user)===null||_post$user===void 0?void 0:_post$user.username)||`User ID: ${post.user_id?post.user_id.substring(0,8):'N/A'}...`;const allImageUrls=getAllImageUrls(post);return/*#__PURE__*/_jsx(\"div\",{className:\"pageContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"contentLayout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mainContent\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"postCard\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:post.post_title||'Untitled Post'}),/*#__PURE__*/_jsxs(\"div\",{className:\"meta\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"postAuthor\",children:[\"By \",authorDisplayName]}),/*#__PURE__*/_jsxs(\"span\",{className:\"postDate\",children:[\" \\u2022 \",formatDate(post.created_at)]}),post.post_region&&/*#__PURE__*/_jsx(\"span\",{className:\"regionTag\",children:post.post_region})]}),/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:post.post_detail||'No description available.'}),allImageUrls.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"imageGrid\",children:allImageUrls.map((url,index)=>/*#__PURE__*/_jsx(\"img\",{src:url,alt:`${post.post_title||'Post'} image ${index+1}`,className:\"postImage\"},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"imageGrid\",children:/*#__PURE__*/_jsx(\"div\",{className:\"imagePlaceholder\",children:\"No Images Available\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"actions\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`voteButton ${userVote.liked?'activeVote':''}`,onClick:()=>!isUpdatingVotes&&handleVote('like'),disabled:isUpdatingVotes,children:[\"\\uD83D\\uDC4D \",post.post_like||0]}),/*#__PURE__*/_jsxs(\"button\",{className:`voteButton ${userVote.disliked?'activeDislike':''}`,onClick:()=>!isUpdatingVotes&&handleVote('dislike'),disabled:isUpdatingVotes,children:[\"\\uD83D\\uDC4E \",post.post_dislike||0]}),/*#__PURE__*/_jsxs(\"span\",{className:\"commentCount\",children:[\"\\uD83D\\uDCAC \",comments.length>0?comments.length:post.comment_count||0,\" comments\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"commentsCard\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"commentsTitle\",children:[\"Comments (\",comments.length>0?comments.length:post.comment_count||0,\")\"]}),checklogin?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmitComment,className:\"commentForm\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"commentTextarea\",value:newCommentText,onChange:e=>setNewCommentText(e.target.value),placeholder:\"Write a comment...\",disabled:isSubmittingComment}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"commentButton\",disabled:isSubmittingComment,children:isSubmittingComment?'Submitting...':'Submit Comment'})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"loginPrompt\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"commentTextarea\",placeholder:\"Login to comment\",disabled:true}),/*#__PURE__*/_jsx(Link,{to:\"/login\",className:\"commentButton\",children:\"Login to Comment\"})]}),loadingComments&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading comments...\"}),!loadingComments&&comments.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"noComments\",children:\"No comments yet. Be the first to comment!\"}),!loadingComments&&comments.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"commentsList\",children:comments.map(comment=>{var _commentVotes$comment,_commentVotes$comment2;return/*#__PURE__*/_jsxs(\"div\",{className:\"comment\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"commentAuthor\",children:getCommenterName(comment.user)}),/*#__PURE__*/_jsx(\"p\",{className:\"commentDate\",children:formatDate(comment.created_at,true)}),/*#__PURE__*/_jsx(\"p\",{className:\"commentText\",children:comment.comment_detail}),/*#__PURE__*/_jsxs(\"div\",{className:\"commentActions\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`commentActionButton ${(_commentVotes$comment=commentVotes[comment.comment_id])!==null&&_commentVotes$comment!==void 0&&_commentVotes$comment.liked?'active':''}`,onClick:()=>handleCommentVote(comment.comment_id,'like'),disabled:isUpdatingCommentVote||!checklogin,children:[\"\\uD83D\\uDC4D \",comment.comment_like||0]}),/*#__PURE__*/_jsxs(\"button\",{className:`commentActionButton ${(_commentVotes$comment2=commentVotes[comment.comment_id])!==null&&_commentVotes$comment2!==void 0&&_commentVotes$comment2.disliked?'active':''}`,onClick:()=>handleCommentVote(comment.comment_id,'dislike'),disabled:isUpdatingCommentVote||!checklogin,children:[\"\\uD83D\\uDC4E \",comment.comment_dislike||0]})]})]},comment.comment_id);})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"regionSidebar\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"sidebarTitle\",children:\"About This Region\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"regionInfoBox\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"regionName\",children:[post.post_region||'Region',\" Region\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"regionDescription\",children:getRegionDescription(post.post_region)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"moreFromRegion\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"sidebarTitle\",children:\"More from this region\"}),loadingRelated?/*#__PURE__*/_jsx(\"p\",{children:\"Loading related posts...\"}):relatedPosts.length>0?/*#__PURE__*/_jsx(_Fragment,{children:relatedPosts.map(relatedPost=>{var _relatedPost$user;return/*#__PURE__*/_jsxs(\"div\",{className:\"relatedPost\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"relatedPostTitle\",children:/*#__PURE__*/_jsx(Link,{to:`/post/${relatedPost.post_id}`,children:relatedPost.post_title||'Untitled Post'})}),/*#__PURE__*/_jsxs(\"p\",{className:\"relatedPostAuthor\",children:[\"By \",((_relatedPost$user=relatedPost.user)===null||_relatedPost$user===void 0?void 0:_relatedPost$user.username)||'Anonymous']})]},relatedPost.post_id);})}):/*#__PURE__*/_jsx(\"p\",{children:\"No related posts found.\"})]})]})]})});};export default PostDetailPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","Link","useNavigate","supabase","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","formatDate","dateString","includeTime","arguments","length","undefined","options","year","month","day","hour","minute","Date","toLocaleDateString","getAllImageUrls","post","urls","imagesProcessedFromPostImageArray","post_image","startsWith","endsWith","parsedImages","JSON","parse","Array","isArray","forEach","url","trim","push","e","post_image_2","post_image_3","getRegionDescription","region","descriptions","PostDetailPage","_ref","_post$user","checklogin","userData","postId","setPost","loadingPost","setLoadingPost","error","setError","isUpdatingVotes","setIsUpdatingVotes","userVote","setUserVote","liked","disliked","navigate","comments","setComments","loadingComments","setLoadingComments","newCommentText","setNewCommentText","isSubmittingComment","setIsSubmittingComment","commentVotes","setCommentVotes","isUpdatingCommentVote","setIsUpdatingCommentVote","relatedPosts","setRelatedPosts","loadingRelated","setLoadingRelated","fetchPostDetails","data","fetchError","from","select","eq","single","Error","console","log","storedVote","localStorage","getItem","post_region","fetchRelatedPosts","post_id","err","message","currentPostId","neq","limit","fetchComments","commentsError","commentsWithUsers","Promise","all","map","comment","user_id","user","userError","savedCommentVotes","handleVote","voteType","currentLikes","post_like","currentDislikes","post_dislike","newLikes","newDislikes","newUserVote","originalPostState","originalUserVoteState","p","Math","max","setItem","stringify","updateError","update","alert","handleCommentVote","commentId","find","c","comment_id","comment_like","comment_dislike","currentVote","newVoteState","originalComments","originalCommentVotes","handleSubmitComment","preventDefault","_userData$email","newComment","insertError","insert","comment_detail","commentWithUser","username","email","split","prevComments","countError","comment_count","prevPost","getCommenterName","commentUser","className","children","authorDisplayName","substring","allImageUrls","post_title","created_at","post_detail","index","src","alt","onClick","disabled","onSubmit","value","onChange","target","placeholder","type","to","_commentVotes$comment","_commentVotes$comment2","relatedPost","_relatedPost$user"],"sources":["D:/Uni/ba/BA_webboard/cafe/src/component/PostDetailPage.js"],"sourcesContent":["// src/components/PostDetailPage.jsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport supabase from './connect'; // Make sure this path matches your project structure\r\nimport '../style/PostDetailPage.css';\r\n\r\n// --- Helper Functions ---\r\nconst formatDate = (dateString, includeTime = false) => {\r\n  if (!dateString) return '';\r\n  const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    ...(includeTime && { hour: '2-digit', minute: '2-digit' })\r\n  };\r\n  return new Date(dateString).toLocaleDateString(undefined, options);\r\n};\r\n\r\nconst getAllImageUrls = (post) => {\r\n  const urls = [];\r\n  if (!post) return urls;\r\n  let imagesProcessedFromPostImageArray = false;\r\n  \r\n  if (post.post_image) {\r\n    if (typeof post.post_image === 'string' && post.post_image.startsWith('[') && post.post_image.endsWith(']')) {\r\n      try {\r\n        const parsedImages = JSON.parse(post.post_image);\r\n        if (Array.isArray(parsedImages)) {\r\n          parsedImages.forEach(url => { \r\n            if (typeof url === 'string' && url.trim() !== '') \r\n              urls.push(url.trim()); \r\n          });\r\n          imagesProcessedFromPostImageArray = true;\r\n        } else if (typeof post.post_image === 'string' && post.post_image.trim() !== '') { \r\n          urls.push(post.post_image.trim()); \r\n        }\r\n      } catch (e) { \r\n        if (typeof post.post_image === 'string' && post.post_image.trim() !== '') { \r\n          urls.push(post.post_image.trim()); \r\n        } \r\n      }\r\n    } else if (typeof post.post_image === 'string' && post.post_image.trim() !== '') { \r\n      urls.push(post.post_image.trim()); \r\n    }\r\n  }\r\n  \r\n  if (!imagesProcessedFromPostImageArray) {\r\n    if (post.post_image_2 && typeof post.post_image_2 === 'string' && post.post_image_2.trim() !== '') { \r\n      urls.push(post.post_image_2.trim()); \r\n    }\r\n    if (post.post_image_3 && typeof post.post_image_3 === 'string' && post.post_image_3.trim() !== '') { \r\n      urls.push(post.post_image_3.trim()); \r\n    }\r\n  }\r\n  return urls;\r\n};\r\n\r\n// Function to get related posts by region\r\nconst getRegionDescription = (region) => {\r\n  const descriptions = {\r\n    'South': 'Southern establishments are famous for their hospitality and traditional recipes.',\r\n    'Central': 'Central area offers a variety of dining experiences in the heart of the city.',\r\n    'North': 'Northern region is known for its cozy cafes and hearty meals.',\r\n    'East': 'Eastern establishments feature unique fusion cuisine and scenic views.',\r\n    'West': 'Western area is famous for trendy spots and innovative dining concepts.'\r\n  };\r\n  \r\n  return descriptions[region] || 'This region offers unique dining experiences and local specialties.';\r\n};\r\n\r\nconst PostDetailPage = ({ checklogin, userData }) => {\r\n  const { postId } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [loadingPost, setLoadingPost] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isUpdatingVotes, setIsUpdatingVotes] = useState(false);\r\n  const [userVote, setUserVote] = useState({ liked: false, disliked: false });\r\n  const navigate = useNavigate();\r\n\r\n  // --- Comments State ---\r\n  const [comments, setComments] = useState([]);\r\n  const [loadingComments, setLoadingComments] = useState(true);\r\n  const [newCommentText, setNewCommentText] = useState('');\r\n  const [isSubmittingComment, setIsSubmittingComment] = useState(false);\r\n  const [commentVotes, setCommentVotes] = useState({});\r\n  const [isUpdatingCommentVote, setIsUpdatingCommentVote] = useState(false);\r\n  \r\n  // --- Related Posts State ---\r\n  const [relatedPosts, setRelatedPosts] = useState([]);\r\n  const [loadingRelated, setLoadingRelated] = useState(true);\r\n\r\n  // Fetch post details\r\n  useEffect(() => {\r\n    const fetchPostDetails = async () => {\r\n      if (!postId) return;\r\n      setLoadingPost(true);\r\n      setError(null);\r\n      try {\r\n        const { data, error: fetchError } = await supabase\r\n          .from('post')\r\n          .select(`\r\n            *,\r\n            user ( username )\r\n          `)\r\n          .eq('post_id', postId)\r\n          .single();\r\n\r\n        if (fetchError) throw fetchError;\r\n        if (!data) throw new Error('Post not found');\r\n        console.log('Post data:', data); // Debug: log the retrieved post\r\n        setPost(data);\r\n        const storedVote = localStorage.getItem(`post-${postId}-vote`);\r\n        if (storedVote) setUserVote(JSON.parse(storedVote));\r\n        \r\n        // Fetch related posts if we have a region\r\n        if (data.post_region) {\r\n          fetchRelatedPosts(data.post_region, data.post_id);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching post details:', err);\r\n        setError(err.message || 'Failed to load post.');\r\n      } finally {\r\n        setLoadingPost(false);\r\n      }\r\n    };\r\n    fetchPostDetails();\r\n  }, [postId]);\r\n\r\n  // Fetch related posts\r\n  const fetchRelatedPosts = async (region, currentPostId) => {\r\n    setLoadingRelated(true);\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('post')\r\n        .select(`\r\n          post_id,\r\n          post_title,\r\n          user_id,\r\n          user:user_id (username)\r\n        `)\r\n        .eq('post_region', region)\r\n        .neq('post_id', currentPostId)\r\n        .limit(3);\r\n        \r\n      if (error) throw error;\r\n      setRelatedPosts(data || []);\r\n    } catch (err) {\r\n      console.error('Error fetching related posts:', err);\r\n      // Don't set error state to avoid disrupting the main content\r\n    } finally {\r\n      setLoadingRelated(false);\r\n    }\r\n  };\r\n\r\n  // Fetch comments\r\n  const fetchComments = useCallback(async () => {\r\n    if (!postId) return;\r\n    setLoadingComments(true);\r\n    try {\r\n      // Simplified query to avoid join issues\r\n      const { data, error: commentsError } = await supabase\r\n        .from('comment')\r\n        .select('*')\r\n        .eq('post_id', postId);\r\n        // .order('created_at', { ascending: true });\r\n\r\n      if (commentsError) throw commentsError;\r\n      console.log('Comments data:', data); // Debug: log the retrieved comments\r\n      \r\n      // Now fetch user details separately for each comment\r\n      const commentsWithUsers = await Promise.all(\r\n        (data || []).map(async (comment) => {\r\n          if (!comment.user_id) return { ...comment, user: null };\r\n          \r\n          const { data: userData, error: userError } = await supabase\r\n            .from('user')\r\n            .select('username')\r\n            .eq('user_id', comment.user_id)\r\n            .single();\r\n            \r\n          if (userError) {\r\n            console.error('Error fetching user for comment:', userError);\r\n            return { ...comment, user: null };\r\n          }\r\n          \r\n          return { ...comment, user: userData };\r\n        })\r\n      );\r\n      \r\n      setComments(commentsWithUsers || []);\r\n    } catch (err) {\r\n      console.error('Error fetching comments:', err);\r\n    } finally {\r\n      setLoadingComments(false);\r\n    }\r\n  }, [postId]);\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [fetchComments]);\r\n\r\n  // Load saved comment votes from localStorage\r\n  useEffect(() => {\r\n    if (postId) {\r\n      const savedCommentVotes = localStorage.getItem(`post-${postId}-comment-votes`);\r\n      if (savedCommentVotes) {\r\n        try {\r\n          setCommentVotes(JSON.parse(savedCommentVotes));\r\n        } catch (e) {\r\n          console.error('Error parsing saved comment votes:', e);\r\n        }\r\n      }\r\n    }\r\n  }, [postId]);\r\n\r\n  const handleVote = async (voteType) => {\r\n    if (!post || isUpdatingVotes) return;\r\n    setIsUpdatingVotes(true);\r\n    const currentLikes = post.post_like || 0;\r\n    const currentDislikes = post.post_dislike || 0;\r\n    let newLikes = currentLikes;\r\n    let newDislikes = currentDislikes;\r\n    let newUserVote = { ...userVote };\r\n    const originalPostState = { ...post };\r\n    const originalUserVoteState = { ...userVote };\r\n\r\n    if (voteType === 'like') {\r\n      if (userVote.liked) { \r\n        newLikes = currentLikes - 1; \r\n        newUserVote.liked = false; \r\n      } else { \r\n        newLikes = currentLikes + 1; \r\n        newUserVote.liked = true;\r\n        if (userVote.disliked) { \r\n          newDislikes = currentDislikes - 1; \r\n          newUserVote.disliked = false;\r\n        }\r\n      }\r\n    } else if (voteType === 'dislike') {\r\n      if (userVote.disliked) { \r\n        newDislikes = currentDislikes - 1; \r\n        newUserVote.disliked = false; \r\n      } else { \r\n        newDislikes = currentDislikes + 1; \r\n        newUserVote.disliked = true;\r\n        if (userVote.liked) { \r\n          newLikes = currentLikes - 1; \r\n          newUserVote.liked = false; \r\n        }\r\n      }\r\n    }\r\n    \r\n    setPost(p => ({...p, post_like: Math.max(0, newLikes), post_dislike: Math.max(0, newDislikes)}));\r\n    setUserVote(newUserVote);\r\n    localStorage.setItem(`post-${postId}-vote`, JSON.stringify(newUserVote));\r\n    \r\n    try {\r\n      const { error: updateError } = await supabase\r\n        .from('post')\r\n        .update({ \r\n          post_like: Math.max(0, newLikes), \r\n          post_dislike: Math.max(0, newDislikes) \r\n        })\r\n        .eq('post_id', postId);\r\n        \r\n      if (updateError) throw updateError;\r\n    } catch (err) {\r\n      console.error(`Error updating post vote:`, err);\r\n      setPost(originalPostState); \r\n      setUserVote(originalUserVoteState); \r\n      localStorage.setItem(`post-${postId}-vote`, JSON.stringify(originalUserVoteState));\r\n      alert(`Failed to update vote. Please try again.`);\r\n    } finally { \r\n      setIsUpdatingVotes(false); \r\n    }\r\n  };\r\n\r\n  const handleCommentVote = async (commentId, voteType) => {\r\n    if (!checklogin || isUpdatingCommentVote) {\r\n      if (!checklogin) alert(\"You must be logged in to vote\");\r\n      return;\r\n    }\r\n    \r\n    setIsUpdatingCommentVote(true);\r\n    \r\n    // Find the comment we're voting on\r\n    const comment = comments.find(c => c.comment_id === commentId);\r\n    if (!comment) {\r\n      setIsUpdatingCommentVote(false);\r\n      return;\r\n    }\r\n    \r\n    // Get current vote counts\r\n    const currentLikes = comment.comment_like || 0;\r\n    const currentDislikes = comment.comment_dislike || 0;\r\n    \r\n    // Get user's current vote on this comment\r\n    const currentVote = commentVotes[commentId] || { liked: false, disliked: false };\r\n    \r\n    // Calculate new vote state\r\n    let newLikes = currentLikes;\r\n    let newDislikes = currentDislikes;\r\n    let newVoteState = { ...currentVote };\r\n    \r\n    if (voteType === 'like') {\r\n      if (currentVote.liked) {\r\n        // User is unliking\r\n        newLikes = Math.max(0, currentLikes - 1);\r\n        newVoteState.liked = false;\r\n      } else {\r\n        // User is liking\r\n        newLikes = currentLikes + 1;\r\n        newVoteState.liked = true;\r\n        // If they had disliked before, remove that dislike\r\n        if (currentVote.disliked) {\r\n          newDislikes = Math.max(0, currentDislikes - 1);\r\n          newVoteState.disliked = false;\r\n        }\r\n      }\r\n    } else if (voteType === 'dislike') {\r\n      if (currentVote.disliked) {\r\n        // User is undisliking\r\n        newDislikes = Math.max(0, currentDislikes - 1);\r\n        newVoteState.disliked = false;\r\n      } else {\r\n        // User is disliking\r\n        newDislikes = currentDislikes + 1;\r\n        newVoteState.disliked = true;\r\n        // If they had liked before, remove that like\r\n        if (currentVote.liked) {\r\n          newLikes = Math.max(0, currentLikes - 1);\r\n          newVoteState.liked = false;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Save original state for rollback if needed\r\n    const originalComments = [...comments];\r\n    const originalCommentVotes = { ...commentVotes };\r\n    \r\n    // Update UI optimistically\r\n    setComments(comments.map(c => \r\n      c.comment_id === commentId \r\n        ? { ...c, comment_like: newLikes, comment_dislike: newDislikes }\r\n        : c\r\n    ));\r\n    \r\n    setCommentVotes({\r\n      ...commentVotes,\r\n      [commentId]: newVoteState\r\n    });\r\n    \r\n    // Save to localStorage\r\n    localStorage.setItem(`post-${postId}-comment-votes`, JSON.stringify({\r\n      ...commentVotes,\r\n      [commentId]: newVoteState\r\n    }));\r\n    \r\n    try {\r\n      // Update the database\r\n      const { error: updateError } = await supabase\r\n        .from('comment')\r\n        .update({\r\n          comment_like: newLikes,\r\n          comment_dislike: newDislikes\r\n        })\r\n        .eq('comment_id', commentId);\r\n        \r\n      if (updateError) throw updateError;\r\n    } catch (err) {\r\n      console.error('Error updating comment vote:', err);\r\n      // Roll back to original state\r\n      setComments(originalComments);\r\n      setCommentVotes(originalCommentVotes);\r\n      localStorage.setItem(`post-${postId}-comment-votes`, JSON.stringify(originalCommentVotes));\r\n      alert('Failed to update vote. Please try again.');\r\n    } finally {\r\n      setIsUpdatingCommentVote(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmitComment = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newCommentText.trim()) {\r\n      alert(\"Comment cannot be empty\");\r\n      return;\r\n    }\r\n    \r\n    if (!checklogin || !userData) {\r\n      alert(\"You must be logged in to comment\");\r\n      return;\r\n    }\r\n    \r\n    if (!postId) {\r\n      alert(\"Post ID is missing\");\r\n      return;\r\n    }\r\n    \r\n    setIsSubmittingComment(true);\r\n    console.log(\"Submitting comment with user:\", userData);\r\n\r\n    try {\r\n      // First, insert the comment\r\n      const { data: newComment, error: insertError } = await supabase\r\n        .from('comment')\r\n        .insert({\r\n          post_id: postId,\r\n          user_id: userData.user_id,\r\n          comment_detail: newCommentText.trim(),\r\n          comment_like: 0,\r\n          comment_dislike: 0\r\n        })\r\n        .select();\r\n\r\n      if (insertError) throw insertError;\r\n      console.log(\"Comment inserted:\", newComment);\r\n\r\n      if (!Array.isArray(newComment) || newComment.length === 0) {\r\n        throw new Error(\"Comment was inserted but no data was returned\");\r\n      }\r\n\r\n      // Add the new comment to the current state\r\n      const commentWithUser = {\r\n        ...newComment[0],\r\n        user: { username: userData.username || userData.email?.split('@')[0] || 'User' }\r\n      };\r\n\r\n      // Add to comments state\r\n      setComments(prevComments => [...prevComments, commentWithUser]);\r\n      setNewCommentText('');\r\n\r\n      // Update post's comment_count\r\n      if (post) {\r\n        const { error: countError } = await supabase\r\n          .from('post')\r\n          .update({ comment_count: (post.comment_count || 0) + 1 })\r\n          .eq('post_id', postId);\r\n          \r\n        if (countError) {\r\n          console.error(\"Error updating post comment count:\", countError);\r\n        } else {\r\n          setPost(prevPost => ({ \r\n            ...prevPost, \r\n            comment_count: (prevPost.comment_count || 0) + 1 \r\n          }));\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error submitting comment:', err);\r\n      alert('Failed to submit comment: ' + (err.message || 'Unknown error'));\r\n    } finally {\r\n      setIsSubmittingComment(false);\r\n    }\r\n  };\r\n\r\n  // Helper to display commenter name\r\n  const getCommenterName = (commentUser) => {\r\n    if (!commentUser) return 'Anonymous';\r\n    return commentUser.username || 'User';\r\n  };\r\n\r\n  if (loadingPost) return <p className=\"loadingError\">Loading post details...</p>;\r\n  if (error) return <p className=\"loadingError\">Error: {error} </p>;\r\n  if (!post) return <p className=\"loadingError\">Post not found.</p>;\r\n\r\n  const authorDisplayName = post.user?.username || `User ID: ${post.user_id ? post.user_id.substring(0, 8) : 'N/A'}...`;\r\n  const allImageUrls = getAllImageUrls(post);\r\n\r\n  return (\r\n    <div className=\"pageContainer\">\r\n      <div className=\"contentLayout\">\r\n        {/* Main Content Column */}\r\n        <div className=\"mainContent\">\r\n          {/* Post Card */}\r\n          <div className=\"postCard\">\r\n            <h1 className=\"title\">{post.post_title || 'Untitled Post'}</h1>\r\n            \r\n            <div className=\"meta\">\r\n              <span className=\"postAuthor\">By {authorDisplayName}</span>\r\n              <span className=\"postDate\"> • {formatDate(post.created_at)}</span>\r\n              {post.post_region && <span className=\"regionTag\">{post.post_region}</span>}\r\n            </div>\r\n            \r\n            <div className=\"description\">{post.post_detail || 'No description available.'}</div>\r\n            \r\n            {allImageUrls.length > 0 ? (\r\n              <div className=\"imageGrid\">\r\n                {allImageUrls.map((url, index) => (\r\n                  <img \r\n                    key={index} \r\n                    src={url} \r\n                    alt={`${post.post_title || 'Post'} image ${index + 1}`} \r\n                    className=\"postImage\" \r\n                  />\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"imageGrid\">\r\n                <div className=\"imagePlaceholder\">No Images Available</div>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"actions\">\r\n              <button \r\n                className={`voteButton ${userVote.liked ? 'activeVote' : ''}`}\r\n                onClick={() => !isUpdatingVotes && handleVote('like')}\r\n                disabled={isUpdatingVotes}\r\n              >\r\n                👍 {post.post_like || 0}\r\n              </button>\r\n              \r\n              <button \r\n                className={`voteButton ${userVote.disliked ? 'activeDislike' : ''}`}\r\n                onClick={() => !isUpdatingVotes && handleVote('dislike')}\r\n                disabled={isUpdatingVotes}\r\n              >\r\n                👎 {post.post_dislike || 0}\r\n              </button>\r\n              \r\n              <span className=\"commentCount\">\r\n                💬 {comments.length > 0 ? comments.length : (post.comment_count || 0)} comments\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Comments Section */}\r\n          <div className=\"commentsCard\">\r\n            <h2 className=\"commentsTitle\">Comments ({comments.length > 0 ? comments.length : (post.comment_count || 0)})</h2>\r\n            \r\n            {checklogin ? (\r\n              <form onSubmit={handleSubmitComment} className=\"commentForm\">\r\n                <textarea\r\n                  className=\"commentTextarea\"\r\n                  value={newCommentText}\r\n                  onChange={(e) => setNewCommentText(e.target.value)}\r\n                  placeholder=\"Write a comment...\"\r\n                  disabled={isSubmittingComment}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"commentButton\"\r\n                  disabled={isSubmittingComment}\r\n                >\r\n                  {isSubmittingComment ? 'Submitting...' : 'Submit Comment'}\r\n                </button>\r\n              </form>\r\n            ) : (\r\n              <div className=\"loginPrompt\">\r\n                <textarea\r\n                  className=\"commentTextarea\"\r\n                  placeholder=\"Login to comment\"\r\n                  disabled={true}\r\n                />\r\n                <Link to=\"/login\" className=\"commentButton\">\r\n                  Login to Comment\r\n                </Link>\r\n              </div>\r\n            )}\r\n            \r\n            {loadingComments && <p>Loading comments...</p>}\r\n            \r\n            {!loadingComments && comments.length === 0 && (\r\n              <p className=\"noComments\">No comments yet. Be the first to comment!</p>\r\n            )}\r\n            \r\n            {!loadingComments && comments.length > 0 && (\r\n              <div className=\"commentsList\">\r\n                {comments.map((comment) => (\r\n                  <div key={comment.comment_id} className=\"comment\">\r\n                    <p className=\"commentAuthor\">\r\n                      {getCommenterName(comment.user)}\r\n                    </p>\r\n                    <p className=\"commentDate\">\r\n                      {formatDate(comment.created_at, true)}\r\n                    </p>\r\n                    <p className=\"commentText\">{comment.comment_detail}</p>\r\n                    <div className=\"commentActions\">\r\n                      <button \r\n                        className={`commentActionButton ${commentVotes[comment.comment_id]?.liked ? 'active' : ''}`}\r\n                        onClick={() => handleCommentVote(comment.comment_id, 'like')}\r\n                        disabled={isUpdatingCommentVote || !checklogin}\r\n                      >\r\n                        👍 {comment.comment_like || 0}\r\n                      </button>\r\n                      <button \r\n                        className={`commentActionButton ${commentVotes[comment.comment_id]?.disliked ? 'active' : ''}`}\r\n                        onClick={() => handleCommentVote(comment.comment_id, 'dislike')}\r\n                        disabled={isUpdatingCommentVote || !checklogin}\r\n                      >\r\n                        👎 {comment.comment_dislike || 0}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Sidebar Column */}\r\n        <div className=\"regionSidebar\">\r\n          <h2 className=\"sidebarTitle\">About This Region</h2>\r\n          \r\n          <div className=\"regionInfoBox\">\r\n            <h3 className=\"regionName\">{post.post_region || 'Region'} Region</h3>\r\n            <p className=\"regionDescription\">\r\n              {getRegionDescription(post.post_region)}\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"moreFromRegion\">\r\n            <h3 className=\"sidebarTitle\">More from this region</h3>\r\n            \r\n            {loadingRelated ? (\r\n              <p>Loading related posts...</p>\r\n            ) : relatedPosts.length > 0 ? (\r\n              <>\r\n                {relatedPosts.map(relatedPost => (\r\n                  <div key={relatedPost.post_id} className=\"relatedPost\">\r\n                    <h4 className=\"relatedPostTitle\">\r\n                      <Link to={`/post/${relatedPost.post_id}`}>\r\n                        {relatedPost.post_title || 'Untitled Post'}\r\n                      </Link>\r\n                    </h4>\r\n                    <p className=\"relatedPostAuthor\">\r\n                      By {relatedPost.user?.username || 'Anonymous'}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <p>No related posts found.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetailPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}