{"ast":null,"code":"import React,{useEffect,useState}from'react';import supabase from'./connect';import{useNavigate,Link}from'react-router-dom';import'../style/ForYouPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ForYouPage=()=>{const[posts,setPosts]=useState([]);const[loading,setLoading]=useState(true);const[activeTab,setActiveTab]=useState('For You');const navigate=useNavigate();useEffect(()=>{fetchPosts();},[]);const fetchPosts=async()=>{try{setLoading(true);// Fetch all posts from Supabase instead of just 6\nconst{data,error}=await supabase.from('post').select(`\n          post_id,\n          post_title,\n          post_detail,\n          post_region,\n          post_like,\n          user:user_id (username)\n        `);if(error){console.error('Supabase error:',error);throw new Error(`Failed to fetch posts. Supabase error: ${error.message}`);}// Randomize posts on the client side\nconst shuffledPosts=data?[...data].sort(()=>0.5-Math.random()).slice(0,6):[];setPosts(shuffledPosts);}catch(error){console.error('Error fetching posts:',error.message);alert(`Error fetching posts: ${error.message}`);}finally{setLoading(false);}};const handleLike=async(e,postId)=>{// Stop the event from bubbling up to the parent (Link)\ne.stopPropagation();e.preventDefault();try{// Check if user is logged in\nconst{data:{user}}=await supabase.auth.getUser();if(!user){alert('Please log in to like posts');return;}// Update post likes in the database\nconst{error}=await supabase.from('post').update({post_like:posts.find(post=>post.post_id===postId).post_like+1}).eq('post_id',postId);if(error)throw error;// Update local state\nsetPosts(posts.map(post=>post.post_id===postId?{...post,post_like:post.post_like+1}:post));}catch(error){console.error('Error liking post:',error);alert('Error liking post. Please try again.');}};// Function to get a consistent random date based on post ID\nconst getRandomDateForPost=postId=>{// Use the post ID as a seed for pseudo-randomness\nconst seed=postId%90;// Use modulo to keep within 90 days\nconst now=new Date();const randomDate=new Date(now);randomDate.setDate(now.getDate()-(seed+1));// +1 to avoid 0 days\nreturn randomDate;};const formatDate=dateString=>{const date=new Date(dateString);const month=date.toLocaleString('default',{month:'short'});const day=date.getDate();return`${month} ${day}`;};return/*#__PURE__*/_jsx(\"div\",{className:\"for-you-container\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"}):/*#__PURE__*/_jsx(\"div\",{className:\"posts-grid\",children:posts.map(post=>{var _post$user,_post$user2;return/*#__PURE__*/_jsx(Link,{to:`/post/${post.post_id}`,className:\"post-card-link\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"post-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"post-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-avatar\",children:(_post$user=post.user)!==null&&_post$user!==void 0&&_post$user.username?post.user.username.charAt(0).toUpperCase():''}),/*#__PURE__*/_jsxs(\"div\",{className:\"post-meta\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"username\",children:((_post$user2=post.user)===null||_post$user2===void 0?void 0:_post$user2.username)||'Anonymous'}),/*#__PURE__*/_jsx(\"div\",{className:\"post-date\",children:formatDate(post.created_at||getRandomDateForPost(post.post_id))})]})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"post-title\",children:post.post_title}),/*#__PURE__*/_jsx(\"p\",{className:\"post-content\",children:post.post_detail}),/*#__PURE__*/_jsxs(\"div\",{className:\"post-footer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"region-tag\",children:post.post_region}),/*#__PURE__*/_jsxs(\"div\",{className:\"like-container\",onClick:e=>handleLike(e,post.post_id),children:[/*#__PURE__*/_jsx(\"span\",{className:\"like-icon\",children:\"\\uD83D\\uDC4D\"}),/*#__PURE__*/_jsx(\"span\",{className:\"like-count\",children:post.post_like})]})]})]})},post.post_id);})})});};export default ForYouPage;","map":{"version":3,"names":["React","useEffect","useState","supabase","useNavigate","Link","jsx","_jsx","jsxs","_jsxs","ForYouPage","posts","setPosts","loading","setLoading","activeTab","setActiveTab","navigate","fetchPosts","data","error","from","select","console","Error","message","shuffledPosts","sort","Math","random","slice","alert","handleLike","e","postId","stopPropagation","preventDefault","user","auth","getUser","update","post_like","find","post","post_id","eq","map","getRandomDateForPost","seed","now","Date","randomDate","setDate","getDate","formatDate","dateString","date","month","toLocaleString","day","className","children","_post$user","_post$user2","to","username","charAt","toUpperCase","created_at","post_title","post_detail","post_region","onClick"],"sources":["D:/Uni/ba/BA_webboard/cafe/src/component/ForYouPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport supabase from './connect';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport '../style/ForYouPage.css';\r\n\r\nconst ForYouPage = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('For You');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Fetch all posts from Supabase instead of just 6\r\n      const { data, error } = await supabase\r\n        .from('post')\r\n        .select(`\r\n          post_id,\r\n          post_title,\r\n          post_detail,\r\n          post_region,\r\n          post_like,\r\n          user:user_id (username)\r\n        `);\r\n\r\n      if (error) {\r\n        console.error('Supabase error:', error);\r\n        throw new Error(`Failed to fetch posts. Supabase error: ${error.message}`);\r\n      }\r\n\r\n      // Randomize posts on the client side\r\n      const shuffledPosts = data ? [...data].sort(() => 0.5 - Math.random()).slice(0, 6) : [];\r\n      setPosts(shuffledPosts);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error.message);\r\n      alert(`Error fetching posts: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLike = async (e, postId) => {\r\n    // Stop the event from bubbling up to the parent (Link)\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      // Check if user is logged in\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n\r\n      if (!user) {\r\n        alert('Please log in to like posts');\r\n        return;\r\n      }\r\n\r\n      // Update post likes in the database\r\n      const { error } = await supabase\r\n        .from('post')\r\n        .update({ post_like: posts.find(post => post.post_id === postId).post_like + 1 })\r\n        .eq('post_id', postId);\r\n\r\n      if (error) throw error;\r\n\r\n      // Update local state\r\n      setPosts(posts.map(post =>\r\n        post.post_id === postId\r\n          ? { ...post, post_like: post.post_like + 1 }\r\n          : post\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error liking post:', error);\r\n      alert('Error liking post. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Function to get a consistent random date based on post ID\r\n  const getRandomDateForPost = (postId) => {\r\n    // Use the post ID as a seed for pseudo-randomness\r\n    const seed = postId % 90; // Use modulo to keep within 90 days\r\n    \r\n    const now = new Date();\r\n    const randomDate = new Date(now);\r\n    randomDate.setDate(now.getDate() - (seed + 1)); // +1 to avoid 0 days\r\n    \r\n    return randomDate;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const month = date.toLocaleString('default', { month: 'short' });\r\n    const day = date.getDate();\r\n    return `${month} ${day}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"for-you-container\">\r\n      {loading ? (\r\n        <div className=\"loading\">Loading...</div>\r\n      ) : (\r\n        <div className=\"posts-grid\">\r\n          {posts.map(post => (\r\n            <Link \r\n              to={`/post/${post.post_id}`} \r\n              key={post.post_id} \r\n              className=\"post-card-link\"\r\n            >\r\n              <div className=\"post-card\">\r\n                <div className=\"post-header\">\r\n                  <div className=\"user-avatar\">\r\n                    {post.user?.username ? post.user.username.charAt(0).toUpperCase() : ''}\r\n                  </div>\r\n                  <div className=\"post-meta\">\r\n                    <div className=\"username\">{post.user?.username || 'Anonymous'}</div>\r\n                    <div className=\"post-date\">\r\n                      {formatDate(post.created_at || getRandomDateForPost(post.post_id))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <h3 className=\"post-title\">{post.post_title}</h3>\r\n                <p className=\"post-content\">{post.post_detail}</p>\r\n\r\n                <div className=\"post-footer\">\r\n                  <div className=\"region-tag\">{post.post_region}</div>\r\n                  <div \r\n                    className=\"like-container\" \r\n                    onClick={(e) => handleLike(e, post.post_id)}\r\n                  >\r\n                    <span className=\"like-icon\">üëç</span>\r\n                    <span className=\"like-count\">{post.post_like}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForYouPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,OAASC,WAAW,CAAEC,IAAI,KAAQ,kBAAkB,CACpD,MAAO,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjC,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,SAAS,CAAC,CACrD,KAAM,CAAAe,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9BH,SAAS,CAAC,IAAM,CACdiB,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACFJ,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,KAAM,CAAEK,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAjB,QAAQ,CACnCkB,IAAI,CAAC,MAAM,CAAC,CACZC,MAAM,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,CAAC,CAEJ,GAAIF,KAAK,CAAE,CACTG,OAAO,CAACH,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvC,KAAM,IAAI,CAAAI,KAAK,CAAC,0CAA0CJ,KAAK,CAACK,OAAO,EAAE,CAAC,CAC5E,CAEA;AACA,KAAM,CAAAC,aAAa,CAAGP,IAAI,CAAG,CAAC,GAAGA,IAAI,CAAC,CAACQ,IAAI,CAAC,IAAM,GAAG,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAG,EAAE,CACvFlB,QAAQ,CAACc,aAAa,CAAC,CACzB,CAAE,MAAON,KAAK,CAAE,CACdG,OAAO,CAACH,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAACK,OAAO,CAAC,CACrDM,KAAK,CAAC,yBAAyBX,KAAK,CAACK,OAAO,EAAE,CAAC,CACjD,CAAC,OAAS,CACRX,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAkB,UAAU,CAAG,KAAAA,CAAOC,CAAC,CAAEC,MAAM,GAAK,CACtC;AACAD,CAAC,CAACE,eAAe,CAAC,CAAC,CACnBF,CAAC,CAACG,cAAc,CAAC,CAAC,CAElB,GAAI,CACF;AACA,KAAM,CAAEjB,IAAI,CAAE,CAAEkB,IAAK,CAAE,CAAC,CAAG,KAAM,CAAAlC,QAAQ,CAACmC,IAAI,CAACC,OAAO,CAAC,CAAC,CAExD,GAAI,CAACF,IAAI,CAAE,CACTN,KAAK,CAAC,6BAA6B,CAAC,CACpC,OACF,CAEA;AACA,KAAM,CAAEX,KAAM,CAAC,CAAG,KAAM,CAAAjB,QAAQ,CAC7BkB,IAAI,CAAC,MAAM,CAAC,CACZmB,MAAM,CAAC,CAAEC,SAAS,CAAE9B,KAAK,CAAC+B,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,OAAO,GAAKV,MAAM,CAAC,CAACO,SAAS,CAAG,CAAE,CAAC,CAAC,CAChFI,EAAE,CAAC,SAAS,CAAEX,MAAM,CAAC,CAExB,GAAId,KAAK,CAAE,KAAM,CAAAA,KAAK,CAEtB;AACAR,QAAQ,CAACD,KAAK,CAACmC,GAAG,CAACH,IAAI,EACrBA,IAAI,CAACC,OAAO,GAAKV,MAAM,CACnB,CAAE,GAAGS,IAAI,CAAEF,SAAS,CAAEE,IAAI,CAACF,SAAS,CAAG,CAAE,CAAC,CAC1CE,IACN,CAAC,CAAC,CACJ,CAAE,MAAOvB,KAAK,CAAE,CACdG,OAAO,CAACH,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1CW,KAAK,CAAC,sCAAsC,CAAC,CAC/C,CACF,CAAC,CAED;AACA,KAAM,CAAAgB,oBAAoB,CAAIb,MAAM,EAAK,CACvC;AACA,KAAM,CAAAc,IAAI,CAAGd,MAAM,CAAG,EAAE,CAAE;AAE1B,KAAM,CAAAe,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAD,IAAI,CAACD,GAAG,CAAC,CAChCE,UAAU,CAACC,OAAO,CAACH,GAAG,CAACI,OAAO,CAAC,CAAC,EAAIL,IAAI,CAAG,CAAC,CAAC,CAAC,CAAE;AAEhD,MAAO,CAAAG,UAAU,CACnB,CAAC,CAED,KAAM,CAAAG,UAAU,CAAIC,UAAU,EAAK,CACjC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAN,IAAI,CAACK,UAAU,CAAC,CACjC,KAAM,CAAAE,KAAK,CAAGD,IAAI,CAACE,cAAc,CAAC,SAAS,CAAE,CAAED,KAAK,CAAE,OAAQ,CAAC,CAAC,CAChE,KAAM,CAAAE,GAAG,CAAGH,IAAI,CAACH,OAAO,CAAC,CAAC,CAC1B,MAAO,GAAGI,KAAK,IAAIE,GAAG,EAAE,CAC1B,CAAC,CAED,mBACEpD,IAAA,QAAKqD,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC/BhD,OAAO,cACNN,IAAA,QAAKqD,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,YAAU,CAAK,CAAC,cAEzCtD,IAAA,QAAKqD,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxBlD,KAAK,CAACmC,GAAG,CAACH,IAAI,OAAAmB,UAAA,CAAAC,WAAA,oBACbxD,IAAA,CAACF,IAAI,EACH2D,EAAE,CAAE,SAASrB,IAAI,CAACC,OAAO,EAAG,CAE5BgB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAE1BpD,KAAA,QAAKmD,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpD,KAAA,QAAKmD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BtD,IAAA,QAAKqD,SAAS,CAAC,aAAa,CAAAC,QAAA,CACzB,CAAAC,UAAA,CAAAnB,IAAI,CAACN,IAAI,UAAAyB,UAAA,WAATA,UAAA,CAAWG,QAAQ,CAAGtB,IAAI,CAACN,IAAI,CAAC4B,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAG,EAAE,CACnE,CAAC,cACN1D,KAAA,QAAKmD,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBtD,IAAA,QAAKqD,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAE,EAAAE,WAAA,CAAApB,IAAI,CAACN,IAAI,UAAA0B,WAAA,iBAATA,WAAA,CAAWE,QAAQ,GAAI,WAAW,CAAM,CAAC,cACpE1D,IAAA,QAAKqD,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBP,UAAU,CAACX,IAAI,CAACyB,UAAU,EAAIrB,oBAAoB,CAACJ,IAAI,CAACC,OAAO,CAAC,CAAC,CAC/D,CAAC,EACH,CAAC,EACH,CAAC,cAENrC,IAAA,OAAIqD,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAElB,IAAI,CAAC0B,UAAU,CAAK,CAAC,cACjD9D,IAAA,MAAGqD,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAElB,IAAI,CAAC2B,WAAW,CAAI,CAAC,cAElD7D,KAAA,QAAKmD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BtD,IAAA,QAAKqD,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAElB,IAAI,CAAC4B,WAAW,CAAM,CAAC,cACpD9D,KAAA,QACEmD,SAAS,CAAC,gBAAgB,CAC1BY,OAAO,CAAGvC,CAAC,EAAKD,UAAU,CAACC,CAAC,CAAEU,IAAI,CAACC,OAAO,CAAE,CAAAiB,QAAA,eAE5CtD,IAAA,SAAMqD,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,cACrCtD,IAAA,SAAMqD,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAElB,IAAI,CAACF,SAAS,CAAO,CAAC,EACjD,CAAC,EACH,CAAC,EACH,CAAC,EA7BDE,IAAI,CAACC,OA8BN,CAAC,EACR,CAAC,CACC,CACN,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}