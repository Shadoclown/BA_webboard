{"ast":null,"code":"import React,{useEffect,useState}from'react';import supabase from'./connect';import{useNavigate,Link}from'react-router-dom';import'../style/MostLikedPage.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MostLikedPage=()=>{const[topPosts,setTopPosts]=useState([]);const[loading,setLoading]=useState(true);const[activeTab,setActiveTab]=useState('Most Liked');const navigate=useNavigate();useEffect(()=>{fetchMostLikedPosts();},[]);const fetchMostLikedPosts=async()=>{try{setLoading(true);// Fetch posts ordered by likes (descending)\nconst{data,error}=await supabase.from('post').select(`\n          *,\n          user:user_id (username)\n        `).order('post_like',{ascending:false}).limit(10);if(error)throw error;setTopPosts(data||[]);}catch(error){console.error('Error fetching most liked posts:',error);alert('Error fetching posts. Please try again.');}finally{setLoading(false);}};const handleTabClick=tabName=>{setActiveTab(tabName);if(tabName==='For You'){navigate('/for-you');}else if(tabName==='Most Liked'){// Stay on current page - already at most-like\n}else if(tabName==='Top 5'){navigate('/top-5');}};const handleLike=async postId=>{try{// Check if user is logged in\nconst{data:{user}}=await supabase.auth.getUser();if(!user){alert('Please log in to like posts');return;}// Update post likes in the database\nconst{error}=await supabase.from('post').update({post_like:topPosts.find(post=>post.post_id===postId).post_like+1}).eq('post_id',postId);if(error)throw error;// Update local state\nsetTopPosts(topPosts.map(post=>post.post_id===postId?{...post,post_like:post.post_like+1}:post));}catch(error){console.error('Error liking post:',error);alert('Error liking post. Please try again.');}};const formatDate=dateString=>{if(!dateString)return'';const date=new Date(dateString);const month=date.toLocaleString('default',{month:'short'});const day=date.getDate();return`${month} ${day}`;};return/*#__PURE__*/_jsx(\"div\",{className:\"most-liked-container\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Top 10 Caf\\xE9s & Restaurants (Most Liked)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"top-10-list\",children:topPosts.slice(0,10).map((post,index)=>{var _post$user;return/*#__PURE__*/_jsx(Link,{to:`/post/${post.post_id}`,className:\"top-10-link\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"top-10-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"rank\",children:index+1}),/*#__PURE__*/_jsxs(\"div\",{className:\"post-details\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"post-title\",children:post.post_title||'Untitled Post'}),/*#__PURE__*/_jsxs(\"p\",{className:\"post-meta\",children:[\"by \",((_post$user=post.user)===null||_post$user===void 0?void 0:_post$user.username)||'Anonymous',\" \\u2022 \",post.post_region||'Unknown Region']})]}),/*#__PURE__*/_jsx(\"div\",{className:\"like-section\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"like-count\",children:[post.post_like||0,\"k\"]})})]})},post.post_id);})})]})});};export default MostLikedPage;","map":{"version":3,"names":["React","useEffect","useState","supabase","useNavigate","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MostLikedPage","topPosts","setTopPosts","loading","setLoading","activeTab","setActiveTab","navigate","fetchMostLikedPosts","data","error","from","select","order","ascending","limit","console","alert","handleTabClick","tabName","handleLike","postId","user","auth","getUser","update","post_like","find","post","post_id","eq","map","formatDate","dateString","date","Date","month","toLocaleString","day","getDate","className","children","slice","index","_post$user","to","post_title","username","post_region"],"sources":["D:/Uni/ba/BA_webboard/cafe/src/component/MostLikedPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport supabase from './connect';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport '../style/MostLikedPage.css';\r\n\r\nconst MostLikedPage = () => {\r\n  const [topPosts, setTopPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('Most Liked');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchMostLikedPosts();\r\n  }, []);\r\n\r\n  const fetchMostLikedPosts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Fetch posts ordered by likes (descending)\r\n      const { data, error } = await supabase\r\n        .from('post')\r\n        .select(`\r\n          *,\r\n          user:user_id (username)\r\n        `)\r\n        .order('post_like', { ascending: false })\r\n        .limit(10);\r\n        \r\n      if (error) throw error;\r\n      setTopPosts(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching most liked posts:', error);\r\n      alert('Error fetching posts. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTabClick = (tabName) => {\r\n    setActiveTab(tabName);\r\n    if (tabName === 'For You') {\r\n      navigate('/for-you');\r\n    } else if (tabName === 'Most Liked') {\r\n      // Stay on current page - already at most-like\r\n    } else if (tabName === 'Top 5') {\r\n      navigate('/top-5');\r\n    }\r\n  };\r\n\r\n  const handleLike = async (postId) => {\r\n    try {\r\n      // Check if user is logged in\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      \r\n      if (!user) {\r\n        alert('Please log in to like posts');\r\n        return;\r\n      }\r\n      \r\n      // Update post likes in the database\r\n      const { error } = await supabase\r\n        .from('post')\r\n        .update({ post_like: topPosts.find(post => post.post_id === postId).post_like + 1 })\r\n        .eq('post_id', postId);\r\n        \r\n      if (error) throw error;\r\n      \r\n      // Update local state\r\n      setTopPosts(topPosts.map(post => \r\n        post.post_id === postId \r\n          ? { ...post, post_like: post.post_like + 1 } \r\n          : post\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error liking post:', error);\r\n      alert('Error liking post. Please try again.');\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    const month = date.toLocaleString('default', { month: 'short' });\r\n    const day = date.getDate();\r\n    return `${month} ${day}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"most-liked-container\">\r\n      {/* <h1 className=\"explore-title\">Explore Cafes and Restaurants</h1>\r\n      \r\n      <div className=\"tabs-container\">\r\n        <div \r\n          className={`tab ${activeTab === 'For You' ? 'active' : ''}`}\r\n          onClick={() => handleTabClick('For You')}\r\n        >\r\n          For You\r\n        </div>\r\n        <div \r\n          className={`tab ${activeTab === 'Most Liked' ? 'active' : ''}`}\r\n          onClick={() => handleTabClick('Most Liked')}\r\n        >\r\n          Most Liked\r\n        </div>\r\n        <div \r\n          className={`tab ${activeTab === 'Top 5' ? 'active' : ''}`}\r\n          onClick={() => handleTabClick('Top 5')}\r\n        >\r\n          Top 5\r\n        </div>\r\n      </div> */}\r\n      \r\n      {loading ? (\r\n        <div className=\"loading\">Loading...</div>\r\n      ) : (\r\n        <>\r\n          <h2 className=\"section-title\">Top 10 Cafés & Restaurants (Most Liked)</h2>\r\n          \r\n          <div className=\"top-10-list\">\r\n            {topPosts.slice(0, 10).map((post, index) => (\r\n              <Link \r\n                to={`/post/${post.post_id}`}\r\n                key={post.post_id}\r\n                className=\"top-10-link\"\r\n              >\r\n                <div className=\"top-10-item\">\r\n                  <div className=\"rank\">{index + 1}</div>\r\n                  <div className=\"post-details\">\r\n                    <h3 className=\"post-title\">{post.post_title || 'Untitled Post'}</h3>\r\n                    <p className=\"post-meta\">\r\n                      by {post.user?.username || 'Anonymous'} • {post.post_region || 'Unknown Region'}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"like-section\">\r\n                    <span className=\"like-count\">{post.post_like || 0}k</span>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MostLikedPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}